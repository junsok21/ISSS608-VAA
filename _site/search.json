[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\nShow the code\npacman::p_load(tidyverse)\n\n\n\n\n\n\n\nShow the code\nexam_data <- read.csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nggrepel\n\n\nShow the code\nlibrary(ggrepel)\nggplot(mtcars, aes(wt, mpg, label = rownames(mtcars))) +\n  geom_text_repel(max.overlaps = 100) +\n  geom_point(color = 'red') +\n  theme_classic(base_size = 16)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 01",
    "section": "",
    "text": "Show the code\npacman::p_load(tidyverse)\n\n\n\n\nShow the code\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nShow the code\nggplot(data=exam_data, aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", colour = \"lightblue\", \n                                    size = 0.5, linetype = \"solid\"),\n    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = \"white\"), \n    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = \"white\"))\n\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x=reorder(RACE,RACE,\n                     function(x)-length(x)))) +\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\nUser Forcats package, more convenient!\n\n\nShow the code\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\n\nAdding mean and median lines on the histogram plot.\nChange fill color and line color\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(MATHS, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1) +\n  geom_vline(aes(xintercept=median(MATHS, na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\nShow the code\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = FALSE) +  \n  theme_bw()\n\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA JS",
    "section": "",
    "text": "I’m Junseok (“JS”). Welcome to my page for ISSS608. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands_on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands_on_Ex02",
    "section": "2.3 Beyond ggplot2 Annotation: ggrepel",
    "text": "2.3 Beyond ggplot2 Annotation: ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n2.3.1 Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands_on_Ex02",
    "section": "2.4 Beyond ggplot2 Themes",
    "text": "2.4 Beyond ggplot2 Themes\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n2.4.1 Working with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\n#p1\nP1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n#P2\nP2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n#3 scatterplot for English score versus Maths score by as shown below\nP3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\nP1+P2\n\n\n\n\n\n(P1/P2) | P3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nCreating figure with insert\n\nP12 <- P1|P2\nP3 + inset_element(P2,\n                  left = 0.02,\n                  bottom = 0.7,\n                  right = 0.5,\n                  top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n2.5.6 Creating a composite figure by using patchwork and ggtheme\n\npatchwork <- (P1/P2) | P3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n3.4.1 Tooltip effect with tooltip aesthetic\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n3.4.3 Customising Tooltip style\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)                                        \n\n\n\n\n\n\n\n3.4.4 Displaying statistics on tooltip\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n3.4.5 Hover effect with data_id aesthetic\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\nStyling hover effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n3.4.7 Combining tooltip and hover effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n3.4.8 Click effect with onclick\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n3.4.9 Coordinated Multiple Views with ggiraph\n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n3.5.1 Creating an interactive scatter plot: plot_ly() method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -> https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\nPlotty+ Color argument\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -> https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\n\n3.5.3 Creating an interactive scatter plot: ggplotly() method\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n3.5.4 Coordinated Multiple Views with plotly\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\nInteractive Data Table : DT Package\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\nLinked brushing: Crosstalk method\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))\n\nWarning: `mutate_each_()` was deprecated in dplyr 0.7.0.\nℹ Please use `across()` instead.\n\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\n\n\n\n4.3.1 Building a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n4.3.2 Building the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n\n\n4.4.1 Building an animated bubble plot: ggplotly() method\n\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(gg)\n\nWarning in p$x$data[firstFrame] <- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\n\n4.4.2 Building an animated bubble plot: plot_ly() method\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class_Ex04",
    "section": "",
    "text": "Show the code\npacman:: p_load(rstatix, gt, patchwork, tidyverse)\n\n\n\n\nShow the code\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nShow the code\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq()\n\n\n\n\n\nShow the code\n  stat_qq_line()\n\n\ngeom_path: na.rm = FALSE\nstat_qq_line: distribution = function (p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) \n.Call(C_qnorm, p, mean, sd, lower.tail, log.p), dparams = list(), na.rm = FALSE, line.p = c(0.25, 0.75), fullrange = FALSE\nposition_identity \n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| eval: false\n#| fig-width: 4\n#| fig-height: 4\n\nggplot(exam_data, aes(sample=ENGLISH)) + stat_qq() + stat_qq_line()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nJunseok TEST callout note\n\n\n\nThe plotthe Code Chunk\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| eval: false \n \nqq <- ggplot(exam_data, aes(sample=ENGLISH)) + \n  stat_qq() + \n  stat_qq_line()\n\nsw_t<- exam_data %>% \n  shapiro_test(ENGLISH) %>% \n  gt()\n\ntmp<- tempfile(fileext = '.png') \ngtsave(sw_t, tmp) \ntable_png<- png::readPNG(tmp,native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#the-plot",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#the-plot",
    "title": "In-class_Ex04",
    "section": "The plot",
    "text": "The plot\n```{r} #| echo: false qq <- ggplot(exam_data, aes(sample=ENGLISH)) + stat_qq() + stat_qq_line()\nsw_t <- exam_data %>% shapiro_test(ENGLISH) %>% gt()\ntmp <- tempfile(fileext = ‘.png’) gtsave(sw_t, tmp) table_png <- png::readPNG(tmp,native = TRUE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#the-code-chunk",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#the-code-chunk",
    "title": "In-class_Ex04",
    "section": "The code chunk",
    "text": "The code chunk\n\n#\\| eval: false\n\n#\\| fig-width: 4\n\n#\\| fig-height: 4\n\nggplot(exam_data, aes(sample=ENGLISH)) + stat_qq() + stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nJunseok TEST callout note"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#the-plot-1",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#the-plot-1",
    "title": "In-class_Ex04",
    "section": "The plot",
    "text": "The plot"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "In this exercise, I have attempted uncovering relationships between Educations, Savings, and Joviality to re-vitalize the City"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In class Ex05",
    "section": "",
    "text": "Show the code\npacman::p_load(jsonlite, igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, dplyr)\n\n\n\n\nShow the code\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\n\n\nRows: 54 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): label, Department, Title\ndbl (1): id\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nShow the code\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\nRows: 9063 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): SentDate, Subject, MainSubject, sourceLabel, targetLabel\ndbl  (2): source, target\ntime (1): SentTime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nShow the code\nMC1 <- jsonlite::fromJSON(\"data/MC1.json\")\n\n\n\n\nShow the code\nMC1_nodes <- as_tibble(MC1$nodes) %>%\n  select(id, type, country)\n\n\n\n\nShow the code\nMC1_edges <- as_tibble(MC1$links) %>%\n  select(source, target, type, weight, key)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "Show the code\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\n\nShow the code\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nShow the code\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n9.3.9 Significant Test of Association (Depedence) : ggbarstats() methods with Bins!\n\n\nShow the code\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\n\n\n\nShow the code\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\n\n\n\nShow the code\npacman::p_load(readxl, performance, parameters, see)\n\n\n\n\nShow the code\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …\n\n\n\n\nShow the code\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nShow the code\ncheck_collinearity(model)\n\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\n\nShow the code\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\nVariable `Component` is not in your data frame :/\n\n\n\n\n\n\n\nShow the code\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\n\n\nShow the code\ncheck_n <- check_normality(model1)\n\n\n\n\nShow the code\nplot(check_n)\n\n\n\n\n\n\n\nShow the code\ncheck_h <- check_heteroscedasticity(model1)\n\n\n\n\nShow the code\nplot(check_h)\n\n\n\n\n\n\n\nShow the code\ncheck_model(model1)\n\n\n\n\n\n\n\nShow the code\nplot(parameters(model1))\n\n\n\n\n\n\n\nShow the code\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-the-data",
    "title": "Take-home_Ex01",
    "section": "Load the Data",
    "text": "Load the Data\n\n\nShow the code\nParts <- read_csv(\"data/Participants.csv\")\n\n\nRows: 1011 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): educationLevel, interestGroup\ndbl (4): participantId, householdSize, age, joviality\nlgl (1): haveKids\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nShow the code\nFin <- read_csv(\"data/FinancialJournal.csv\")\n\n\nRows: 1513636 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): category\ndbl  (2): participantId, amount\ndttm (1): timestamp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nData Prep\n#Make EducationLevel, interestGroup, category, and Household Size as Factors\n\n\nShow code\nParts <- Parts %>%\n  mutate(educationLevel = as.factor(educationLevel))\n\nParts <- Parts %>%\n  mutate(householdSize = as.factor(householdSize))\n\nParts <- Parts %>%\n  mutate(interestGroup = as.factor(interestGroup))\n\nParts <- Parts %>%\n  mutate(participantId = as.integer(participantId))\n\nFin <- Fin %>%\n  mutate(category = as.factor(category))\n\n\n#DateTime transformation\n\n\nShow code\nFin$Month_Yr <- format(as.Date(Fin$timestamp), \"%Y-%m\")\n\n\n#Pivot Columns\n\n\nShow code\nFin_Final <- Fin %>%\n  group_by(participantId, category) %>%\n  summarise(amount = sum(amount)) %>%\n  pivot_wider(names_from = category, values_from = amount)\n\n\n`summarise()` has grouped output by 'participantId'. You can override using the\n`.groups` argument.\n\n\n#Change NA to 0\n\n\nShow code\nFin_Final[is.na(Fin_Final)] <- 0\n\n\n#Add new columns Cost_of_living, Total_Income, and Total_Savings\n\n\nShow code\nFin_Final <- Fin_Final %>%\n   mutate(Cost_of_living = Education + Food + Recreation + Shelter)\n\nFin_Final <- Fin_Final %>%\n   mutate(Total_Income = Wage + RentAdjustment)\n\nFin_Final <- Fin_Final %>%\n   mutate(Total_Savings = Cost_of_living + Total_Income)\n\n\n#Combine 2 tables together\n\n\nShow code\ncombined_table <- merge(Parts, Fin_Final, by = \"participantId\")\n\n\n\n\nShow code\nkable(head(combined_table), \"simple\")\n\n\n\n\n\nparticipantId h\nouseholdSize h\naveKids\nage e\nducationLevel i\nnterestGroup\njoviality\nEducation\nFood\nRecreation\nShelter\nWage\nRentAdjustment\nCost_of_living\nTotal_Income\nTotal_Savings\n\n\n\n\n0\n3\nTRUE\n36\nHighSchoolOrCollege\nH\n0.0016267\n-494.0699\n-3141.976\n-4384.067\n-7214.852\n109816.59\n0.000\n-15234.97\n109816.59\n94581.623\n\n\n1\n3\nTRUE\n25\nHighSchoolOrCollege\nB\n0.3280865\n-494.0699\n-3167.336\n-6637.511\n-7214.852\n96374.93\n0.000\n-17513.77\n96374.93\n78861.160\n\n\n2\n3\nTRUE\n35\nHighSchoolOrCollege\nA\n0.3934696\n-166.5618\n-3467.314\n-4172.006\n-7235.188\n85107.52\n0.000\n-15041.07\n85107.52\n70066.451\n\n\n3\n3\nTRUE\n21\nHighSchoolOrCollege\nI\n0.1380634\n-494.0699\n-3395.537\n-4704.288\n-7214.852\n82269.33\n0.000\n-15808.75\n82269.33\n66460.587\n\n\n4\n3\nTRUE\n43\nBachelors\nH\n0.8573967\n-166.5618\n-3262.336\n-6315.910\n-18410.462\n106055.17\n4809.283\n-28155.27\n110864.45\n82709.183\n\n\n5\n3\nTRUE\n32\nHighSchoolOrCollege\nD\n0.7729578\n-166.5618\n-4145.111\n-5139.370\n-7800.437\n23208.92\n0.000\n-17251.48\n23208.92\n5957.441\n\n\n\n\n\n#Skim the Combined Table\n\n\nShow code\nskimr::skim(combined_table)\n\n\n\nData summary\n\n\nName\ncombined_table\n\n\nNumber of rows\n1011\n\n\nNumber of columns\n16\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n3\n\n\nlogical\n1\n\n\nnumeric\n12\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nhouseholdSize\n0\n1\nFALSE\n3\n2: 373, 1: 337, 3: 301\n\n\neducationLevel\n0\n1\nFALSE\n4\nHig: 525, Bac: 232, Gra: 170, Low: 84\n\n\ninterestGroup\n0\n1\nFALSE\n10\nJ: 116, H: 111, G: 108, F: 106\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nhaveKids\n0\n1\n0.3\nFAL: 710, TRU: 301\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nparticipantId\n0\n1\n505.00\n291.99\n0.00\n252.50\n505.00\n757.50\n1010.00\n▇▇▇▇▇\n\n\nage\n0\n1\n39.07\n12.38\n18.00\n29.00\n39.00\n50.00\n60.00\n▇▇▇▇▇\n\n\njoviality\n0\n1\n0.49\n0.29\n0.00\n0.24\n0.48\n0.75\n1.00\n▇▇▇▇▇\n\n\nEducation\n0\n1\n-152.69\n316.73\n-1184.87\n-166.56\n0.00\n0.00\n0.00\n▁▁▁▁▇\n\n\nFood\n0\n1\n-3663.13\n1644.70\n-6889.07\n-4996.91\n-3586.59\n-3277.72\n-32.00\n▁▅▇▁▂\n\n\nRecreation\n0\n1\n-4098.26\n2602.62\n-10285.19\n-5978.49\n-4568.99\n-2337.76\n0.00\n▁▅▇▃▆\n\n\nShelter\n0\n1\n-7227.57\n3808.90\n-20232.63\n-9895.59\n-7845.02\n-5101.56\n0.00\n▁▁▇▇▃\n\n\nWage\n0\n1\n45101.56\n30567.82\n2098.36\n28095.83\n40996.93\n57654.05\n211734.65\n▇▅▁▁▁\n\n\nRentAdjustment\n0\n1\n54.34\n309.74\n0.00\n0.00\n0.00\n0.00\n4809.28\n▇▁▁▁▁\n\n\nCost_of_living\n0\n1\n-15141.64\n7204.85\n-32554.69\n-19809.35\n-16693.90\n-12632.53\n-32.00\n▁▃▇▂▂\n\n\nTotal_Income\n0\n1\n45155.90\n30585.73\n2098.36\n28098.78\n41024.54\n57654.05\n211734.65\n▇▅▁▁▁\n\n\nTotal_Savings\n0\n1\n30014.26\n28636.21\n1276.08\n9420.94\n22757.71\n41150.84\n195298.22\n▇▂▁▁▁\n\n\n\n\n\n#Export file\n\n\nShow the code\nwrite.csv(combined_table, \"combined_table.csv\", row.names = FALSE)\n\n\n#QQ Line test to test normality\n\n\nShow code\nggplot(combined_table,\n       aes(sample=Total_Savings)) +\n  stat_qq()\n\n\n\n\n\nShow code\n  stat_qq_line()\n\n\ngeom_path: na.rm = FALSE\nstat_qq_line: distribution = function (p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) \n.Call(C_qnorm, p, mean, sd, lower.tail, log.p), dparams = list(), na.rm = FALSE, line.p = c(0.25, 0.75), fullrange = FALSE\nposition_identity \n\n\n#QQ Stats - based on the result below (the low p value and the fat that the points are not aligned well with the stright line), we are unable to confirm normality assumption on the Total_Savings distribution. Therefore, non-parametric test will be used for hypthesis testing. Note that the null hypothesis is no difference between Total_Savings between different education levels\n\n\nShow code\nqq <- ggplot(combined_table,\n             aes(sample=Total_Savings)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- combined_table %>%\n  shapiro_test(Total_Savings) %>%\n  gt()\n\ntmp<- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp,native = TRUE)\n\nqq + table_png\n\n\n\n\n\n#Median is used instead of mean, because i could not get a chance to filter out the outliers due to time constraints.\n\n\nShow the code\n#Order of Education variables by median of Total_Savings\n\n# Create a boxplot\nggplot(combined_table, aes(x= reorder(educationLevel, -Total_Savings, FUN = median), y=Total_Savings)) +\n  geom_boxplot() +\n  labs(title = \"Boxplot of Total_Savings by Education Level\")\n\n\n\n\n\nShow the code\n# Perform non-parametric ANOVA test\nkruskal.test(Total_Savings ~ educationLevel, data = combined_table)\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  Total_Savings by educationLevel\nKruskal-Wallis chi-squared = 380.07, df = 3, p-value < 2.2e-16\n\n\n\n\nShow the code\nggplot(data = combined_table, aes(x = reorder(educationLevel, -Total_Savings, FUN = median), y = Total_Savings)) +\n  stat_pointinterval(width = 0.95, point_estimate = \"median\", interval = \"qi\", point_color = \"red\")+\n  labs(title = \"Visualising Uncertainty in median estimates of Total_Savings by Education Level\", \n       subtitle = \"Quantiles intervals (95% and 99%) of Total_Savings by Education level\")\n\n\nWarning in layer_slabinterval(data = data, mapping = mapping, stat =\nStatPointinterval, : Ignoring unknown parameters: `point_estimate` and\n`interval`\n\n\n\n\n\nShow the code\n  theme(plot.title = element_text(hjust = 0.5))\n\n\nList of 1\n $ plot.title:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0.5\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE\n\n\n#Insights: Graduates and Bachelors have higher uncertainties, due to presence of outliers. Limitation of distributions along the vertical axis: there are only one point and two error bars for each educationLevel, this doesn’t tell us much about distribution of data points at each Saving level. Hence we try plotting jittered plot in combination with violin plot.\n\n\nShow the code\n # Create a jittered plot\nggplot(combined_table, aes(x = educationLevel, y = Total_Savings)) +\n  geom_jitter(width = 0.2, alpha = 0.5) +\n  geom_violin(fill = \"lightgray\", alpha =0.2) +\n  labs(x = \"Education Level\", y = \"Total Savings\")\n\n\n\n\n\n\n\nShow the code\nggplot(combined_table, \n       aes(x = joviality, \n           y = interestGroup)) +\n  geom_density_ridges(\n    scale = 2, alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Joviality\",\n    limits = c(0, 1)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\nPicking joint bandwidth of 0.105\n\n\n\n\n\n#insight = interestGroup A, B, F, and H have semi-obvious declining pattern between joviality 0.50-1.00. I suggest the city authority pay special attention to make these people happier - to turn them around to revitalize the city.\n#Creating an basic interactive scatter plot: Plot_ly() method\n\n\nShow the code\nplot_ly(data = combined_table,\n              x = ~Total_Savings,\n              y = ~joviality,\n              color = ~educationLevel)\n\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -> https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n#The above plot is a bit hard to read as many points are aggregated together, especially for lower Savings group, #Hence, I decided to make the chart more interactive by adding a drop down menu to select the educationLevel.\n\n\nShow the code\n#Annotation variable for the dropdown menu defined.\nannot <- list(list(text = \"Education Level:\",\n                   x = 1.3,\n                   y = 0.7,\n                   xref = 'paper',\n                   yref = 'paper',\n                   showarrow = FALSE))\n\n# Define the button options\nbutton_options <- list(\n  list(label = \"Graduate\", method = \"update\", args = list(list(visible = c(FALSE, TRUE, FALSE, FALSE)))),\n  list(label = \"Bachelor's\", method = \"update\", args = list(list(visible = c(TRUE, FALSE, FALSE, FALSE)))),\n  list(label = \"HighSchoolOrColleage\", method = \"update\", args = list(list(visible = c(FALSE, FALSE, TRUE, FALSE)))),\n  list(label = \"LowerThan HighSchool\", method = \"update\", args = list(list(visible = c(FALSE, FALSE, FALSE, TRUE))))\n)\n\n# Create the plot_ly plot with dropdown menu\nplot_ly(data = combined_table,\n        x = ~Total_Savings,\n        y = ~joviality,\n        color = ~educationLevel,\n        type = \"scatter\",\n        mode = \"markers\",\n        marker = list(size = 10)) %>%\n  layout(\n    updatemenus = list(\n      list(type = \"dropdown\",\n           x = 1.3, y = 0.65,\n           buttons = button_options)\n    ),\n    annotations = annot\n  )\n\n\n\n\n\n\n\n\nShow the code\ninterval <- c(0, 20000, 40000, 60000, 80000, 100000, Inf)\n\ncombined_table$Savings_group <- cut(combined_table$Total_Savings, breaks = interval, right = FALSE)\n\nlevels(combined_table$Savings_group) <- c(\"0-20K\", \"20-40K\", \"40-60K\", \"60-80K\", \"80-100K\", \"100K+\" )\n\n                                      \nmed_joviality <- aggregate(joviality ~ Savings_group, data=combined_table, FUN = median) \n\nplot_ly(med_joviality, \n              x = ~Savings_group,\n              y = ~joviality, type = \"scatter\", mode = \"markers\") %>%\n  layout(\n    title = \"Median Joviality by Savings Group\",\n    xaxis = list(\n      title = \"Savings Group\"\n    )\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-r-packages-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-r-packages-data",
    "title": "Take Home Exercise 1",
    "section": "2. Load R Packages & Data",
    "text": "2. Load R Packages & Data\n\n2.1 Load R Packages\nSome required libraries include:\n\nggiraph, plotly: To create interactive visualization\nggstatsplot: To generate graphics with details from statistical tests\ntidyverse: A suite of data tidying up and visualization packages such as tidyr, ggplot2, knitr and so on\n\n\n\nShow the code\npacman:: p_load(ggplot2, ggiraph, ggridges, ggthemes, colorspace, ggstatsplot, rstatix, gt, patchwork, tidyverse, patchwork, ggdist, png, gganimate, dplyr, skimr, knitr, rstatix, gt, plotly, DT, scales)\n\n\n\n\n2.2 Load the Data\n\n\nShow the code\nParts <- read_csv(\"data/Participants.csv\")\n\n\n\n\nShow the code\nFin <- read_csv(\"data/FinancialJournal.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparation-steps",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparation-steps",
    "title": "Take Home Exercise 1",
    "section": "3. Preparation Steps",
    "text": "3. Preparation Steps\n\n3.1 Make EducationLevel, interestGroup, category, and Household Size as Factors\n\n\nShow code\nParts <- Parts %>%\n  mutate(educationLevel = as.factor(educationLevel))\n\nParts <- Parts %>%\n  mutate(householdSize = as.factor(householdSize))\n\nParts <- Parts %>%\n  mutate(interestGroup = as.factor(interestGroup))\n\nParts <- Parts %>%\n  mutate(participantId = as.integer(participantId))\n\nFin <- Fin %>%\n  mutate(category = as.factor(category))\n\n\n\n\n3.2 DateTime transformation\n\n\nShow code\nFin$Month_Yr <- format(as.Date(Fin$timestamp), \"%Y-%m\")\n\n\n\n\n3.3 Pivot Columns\n\n\nShow code\nFin_Final <- Fin %>%\n  group_by(participantId, category) %>%\n  summarise(amount = sum(amount)) %>%\n  pivot_wider(names_from = category, values_from = amount)\n\n\n\n\n3.4 Change NA to 0\n\n\nShow code\nFin_Final[is.na(Fin_Final)] <- 0\n\n\n\n\n3.5 Add new columns Cost_of_living, Total_Income, and Total_Savings\n\n\nShow code\nFin_Final <- Fin_Final %>%\n   mutate(Cost_of_living = Education + Food + Recreation + Shelter)\n\nFin_Final <- Fin_Final %>%\n   mutate(Total_Income = Wage + RentAdjustment)\n\nFin_Final <- Fin_Final %>%\n   mutate(Total_Savings = Cost_of_living + Total_Income)\n\n\n\n\n3.6 Combine the two tables together\n\n\nShow code\ncombined_table <- merge(Parts, Fin_Final, by = \"participantId\")\n\n\n\n\n3.7 View the table snippet using kable function\n\n\nShow code\nkable(head(combined_table), \"simple\")\n\n\n\n\n\nparticipantId h\nouseholdSize h\naveKids\nage e\nducationLevel i\nnterestGroup\njoviality\nEducation\nFood\nRecreation\nShelter\nWage\nRentAdjustment\nCost_of_living\nTotal_Income\nTotal_Savings\n\n\n\n\n0\n3\nTRUE\n36\nHighSchoolOrCollege\nH\n0.0016267\n-494.0699\n-3141.976\n-4384.067\n-7214.852\n109816.59\n0.000\n-15234.97\n109816.59\n94581.623\n\n\n1\n3\nTRUE\n25\nHighSchoolOrCollege\nB\n0.3280865\n-494.0699\n-3167.336\n-6637.511\n-7214.852\n96374.93\n0.000\n-17513.77\n96374.93\n78861.160\n\n\n2\n3\nTRUE\n35\nHighSchoolOrCollege\nA\n0.3934696\n-166.5618\n-3467.314\n-4172.006\n-7235.188\n85107.52\n0.000\n-15041.07\n85107.52\n70066.451\n\n\n3\n3\nTRUE\n21\nHighSchoolOrCollege\nI\n0.1380634\n-494.0699\n-3395.537\n-4704.288\n-7214.852\n82269.33\n0.000\n-15808.75\n82269.33\n66460.587\n\n\n4\n3\nTRUE\n43\nBachelors\nH\n0.8573967\n-166.5618\n-3262.336\n-6315.910\n-18410.462\n106055.17\n4809.283\n-28155.27\n110864.45\n82709.183\n\n\n5\n3\nTRUE\n32\nHighSchoolOrCollege\nD\n0.7729578\n-166.5618\n-4145.111\n-5139.370\n-7800.437\n23208.92\n0.000\n-17251.48\n23208.92\n5957.441\n\n\n\n\n\n\n\n3.8 Export file for review\n\n\nShow the code\nwrite.csv(combined_table, \"combined_table.csv\", row.names = FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#normality-test",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#normality-test",
    "title": "Take Home Exercise 1",
    "section": "4. Normality Test",
    "text": "4. Normality Test\n\n4.1 QQ Plot\n\n\nShow code\nggplot(combined_table,\n       aes(sample=Total_Savings))+\n       labs(x = \"x\", y = \"Total Savings\"\n       ) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n4.2 QQ Plot Statistics to confirm normality assumption\n\n\nShow code\nqq <- ggplot(combined_table,\n             aes(sample=Total_Savings)) +\n         labs(x = \"x\", y = \"Total Savings\"\n       ) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- combined_table %>%\n  shapiro_test(Total_Savings) %>%\n  gt()\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp, native = TRUE)\n\nqq + table_png\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBased on the result above and below (the p value and the fact that the points are not aligned well with the stright line), we are unable to confirm normality assumption on the Total_Savings distribution. Therefore, non-parametric test will be used for subsequent ANOVA  testing done in section 5.1.2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-analysis-insights",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-analysis-insights",
    "title": "Take Home Exercise 1",
    "section": "5. Exploratory Analysis & Insights",
    "text": "5. Exploratory Analysis & Insights\n\n5.1.1 Create a Box Plot for median of Total_Savings by Education Level\n\n\n\n\n\n\nNote\n\n\n\nMedian was used instead of mean, because i could not get a chance to filter out the outliers due to time constraints.\n\n\n\n\nShow the code\n# Create a boxplot\nggplot(combined_table, aes(x= reorder(educationLevel, -Total_Savings, FUN = median), y=Total_Savings)) +\n  geom_boxplot() +\n  labs(title = \"Boxplot of Total_Savings by Education Level\",\n       x = \"Education Level\", y = \"Total Savings\")\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nNote the education level has been ordered in Descending order, based on Total Savings\n\n\n\n\n5.1.2 ANOVA test (non-Parametric)\n\n\nShow the code\n# Perform non-parametric ANOVA test\nkruskal.test(Total_Savings ~ educationLevel, data = combined_table)\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  Total_Savings by educationLevel\nKruskal-Wallis chi-squared = 380.07, df = 3, p-value < 2.2e-16\n\n\n\n\n\n\n\n\nNote\n\n\n\nLooking at the test’s p value, we reject the null hypothesis that there’s no significant difference in Total Savings based on educationLevel. There is a significant difference in Total Savings depending on education level.\n\n\n\n\n5.2 Plot Uncertanties in Median Total Savings by Education Level\n\n\nShow the code\nggplot(data = combined_table, aes(x = reorder(educationLevel, -Total_Savings, FUN = median), y = Total_Savings)) +\n  stat_pointinterval(width = 0.95, point_estimate = \"median\", interval = \"qi\", point_color = \"red\")+\n  labs(title = \"Visualising Uncertainty in median estimates of Total_Savings by Education Level\", \n       subtitle = \"Quantiles intervals (95% and 99%) of Total_Savings by Education level\",\n       x = \"Education Level\", y = \"Total Savings\")+\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nGraduates and Bachelors face higher uncertainties, due to presence of outliers. Limitation of distributions along the vertical axis: there are only one point and two error bars for each educationLevel, This doesn’t tell us much about distribution of data points at each Saving level. Hence, we try plotting jittered plot in combination with violin plot.\n\n\n\n\n5.2.1 Jittered + Violin plots\n\nLooks much more informative now! The gap in Total Savings between Bachelors and Graduate degrees are not that significant. But these groups have bigger difference compared to the lower education groups.\n\n\nShow the code\n # Create a jittered plot\nggplot(combined_table, aes(x = educationLevel, y = Total_Savings)) +\n  geom_jitter(width = 0.2, alpha = 0.5) +\n  geom_violin(fill = \"lightgray\", alpha =0.2) +\n  labs(x = \"Education Level\", y = \"Total Savings\")\n\n\n\n\n\n\n\n\n5.3 Ridge Plot EDA between Joviality and Interest group\n\n\nShow the code\nggplot(combined_table, \n       aes(x = joviality, \n           y = interestGroup)) +\n  geom_density_ridges(\n    scale = 2, alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Joviality\",\n    limits = c(0, 1)\n  ) +\n  scale_y_discrete(name = \"Interest_Group\", expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ninterestGroup A, B, F, and H have semi-obvious declining pattern in joviality range especially in 0.50-1.00. I suggest the city authority pay extra attention to make these people happier - to turn them around in an effort to revitalize the city."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#interactive-plots",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#interactive-plots",
    "title": "Take Home Exercise 1",
    "section": "6 Interactive Plots",
    "text": "6 Interactive Plots\n\n6.1 Basic interactive scatter plot: Plot_ly() method\n\n\nShow the code\nplot_ly(data = combined_table,\n              x = ~Total_Savings,\n              y = ~joviality,\n              color = ~educationLevel)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe above plot is a bit hard to read as many points are aggregated together, especially for lower Savings group, Hence, I decided to make the chart more interactive by adding a drop down menu to select the educationLevel.\n\n\n\n\n6.2 Interactive Plot with Drop Down Menu\n\n\nShow the code\n#Annotation variable for the dropdown menu defined.\nannot <- list(list(text = \"Education Level:\",\n                   x = 1.3,\n                   y = 0.7,\n                   xref = 'paper',\n                   yref = 'paper',\n                   showarrow = FALSE))\n\n# Define the button options\nbutton_options <- list(\n  list(label = \"Graduate\", method = \"update\", args = list(list(visible = c(FALSE, TRUE, FALSE, FALSE)))),\n  list(label = \"Bachelor's\", method = \"update\", args = list(list(visible = c(TRUE, FALSE, FALSE, FALSE)))),\n  list(label = \"HighSchoolOrColleage\", method = \"update\", args = list(list(visible = c(FALSE, FALSE, TRUE, FALSE)))),\n  list(label = \"LowerThan HighSchool\", method = \"update\", args = list(list(visible = c(FALSE, FALSE, FALSE, TRUE))))\n)\n\n# Create the plot_ly plot with dropdown menu\nplot_ly(data = combined_table,\n        x = ~Total_Savings,\n        y = ~joviality,\n        color = ~educationLevel,\n        type = \"scatter\",\n        mode = \"markers\",\n        marker = list(size = 10)) %>%\n  layout(\n    updatemenus = list(\n      list(type = \"dropdown\",\n           x = 1.3, y = 0.65,\n           buttons = button_options)\n    ),\n    annotations = annot\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nEducation level matters for household savings. Generally the higher the education level is, the higher the household saving is.\n\n\n\n\n6.3 Does Savings Matter for Joviality?\n\n\n\n\n\n\nNote\n\n\n\nFor further analysis, I have binned the Savings amount into 6 groups, and found out median joviality of each group.\n\n\n\n\nShow the code\ninterval <- c(0, 20000, 40000, 60000, 80000, 100000, Inf)\n\ncombined_table$Savings_group <- cut(combined_table$Total_Savings, breaks = interval, right = FALSE)\n\nlevels(combined_table$Savings_group) <- c(\"0-20K\", \"20-40K\", \"40-60K\", \"60-80K\", \"80-100K\", \"100K+\" )\n\n                                      \nmed_joviality <- aggregate(joviality ~ Savings_group, data=combined_table, FUN = median) \n\nplot_ly(med_joviality, \n              x = ~Savings_group,\n              y = ~joviality, type = \"scatter\", mode = \"markers\") %>%\n  layout(\n    title = \"Median Joviality by Savings Group\",\n    xaxis = list(\n      title = \"Savings Group\"\n    )\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nInterestingly, there is no apparent linear relationship between household savings and joviality. However, people with higher household savings tend to have lower joviality in general. I recommend the city council to take some measure for mental health of these people so these families can stay in the city longer."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary",
    "title": "Take Home Exercise 1",
    "section": "7 Summary",
    "text": "7 Summary\n\n\n\n\n\n\nNote\n\n\n\nInsight 1: The presence of outliers makes the uncertainty higher for graduates and bachelors, and the limited information in the original plot was improved by using a jittered and violin plot.\n\n\n\n\n\n\n\n\nNote\n\n\n\nInsight 2: There is a semi-obvious declining pattern in joviality for interest groups A, B, F, and H between joviality 0.50-1.00, suggesting that the city authority should pay allocate budgets to improving happiness in these groups for their wellbeing.\n\n\n\n\n\n\n\n\nNote\n\n\n\nInsight 3: there is no clear linear relationship between household savings and joviality, but individuals with higher household savings tend to have lower joviality overall. This suggests that mental health support may be beneficial for these individuals. The city council can consider providing resources for mental health services and support groups."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#interactive-plots-does-savings-matter-for-joviality",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#interactive-plots-does-savings-matter-for-joviality",
    "title": "Take Home Exercise 1",
    "section": "6 Interactive Plots: Does Savings Matter for Joviality?",
    "text": "6 Interactive Plots: Does Savings Matter for Joviality?\n\n6.1 Basic interactive scatter plot: Plot_ly() method\n\n\nShow the code\nplot_ly(data = combined_table,\n              x = ~Total_Savings,\n              y = ~joviality,\n              color = ~educationLevel)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nInterestingly, there is no apparent linear relationship between household savings and joviality. However, people with higher household savings tend to have lower joviality in general. I recommend the city council to take some measure for mental health of these people so these families can stay in the city longer.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe above plot is a bit hard to read as many points are aggregated together, especially for lower Savings group, Hence, I decided to make the chart more interactive by adding a drop down menu to select the educationLevel.\n\n\n\n\n6.2 Interactive Plot with Drop Down Menu\n\n\nShow the code\n#Annotation variable for the dropdown menu defined.\nannot <- list(list(text = \"Education Level:\",\n                   x = 1.3,\n                   y = 0.7,\n                   xref = 'paper',\n                   yref = 'paper',\n                   showarrow = FALSE))\n\n# Define the button options\nbutton_options <- list(\n  list(label = \"Graduate\", method = \"update\", args = list(list(visible = c(FALSE, TRUE, FALSE, FALSE)))),\n  list(label = \"Bachelor's\", method = \"update\", args = list(list(visible = c(TRUE, FALSE, FALSE, FALSE)))),\n  list(label = \"HighSchoolOrColleage\", method = \"update\", args = list(list(visible = c(FALSE, FALSE, TRUE, FALSE)))),\n  list(label = \"LowerThan HighSchool\", method = \"update\", args = list(list(visible = c(FALSE, FALSE, FALSE, TRUE))))\n)\n\n# Create the plot_ly plot with dropdown menu\nplot_ly(data = combined_table,\n        x = ~Total_Savings,\n        y = ~joviality,\n        color = ~educationLevel,\n        type = \"scatter\",\n        mode = \"markers\",\n        marker = list(size = 10)) %>%\n  layout(\n    updatemenus = list(\n      list(type = \"dropdown\",\n           x = 1.3, y = 0.65,\n           buttons = button_options)\n    ),\n    annotations = annot\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nEducation level matters for household savings. Generally the higher the education level is, the higher the household saving is.\n\n\n\n\n6.3 Median Joviality Analysis by Savings Group\n\n\n\n\n\n\nNote\n\n\n\nFor further analysis, I have binned the Savings amount into 6 groups, and found out median joviality of each group. Interestingly, the higher the saving-the lower the joviality relationship is more apparent.\n\n\n\n\nShow the code\ninterval <- c(0, 20000, 40000, 60000, 80000, 100000, Inf)\n\ncombined_table$Savings_group <- cut(combined_table$Total_Savings, breaks = interval, right = FALSE)\n\nlevels(combined_table$Savings_group) <- c(\"0-20K\", \"20-40K\", \"40-60K\", \"60-80K\", \"80-100K\", \"100K+\" )\n\n                                      \nmed_joviality <- aggregate(joviality ~ Savings_group, data=combined_table, FUN = median) \n\nplot_ly(med_joviality, \n              x = ~Savings_group,\n              y = ~joviality, type = \"scatter\", mode = \"markers\") %>%\n  layout(\n    title = \"Median Joviality by Savings Group\",\n    xaxis = list(\n      title = \"Savings Group\"\n    )\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take home Exercise 2",
    "section": "",
    "text": "Through visual analytics, FishEye aims to identify companies potentially engaged in illegal fishing and protect marine species affected by it.\nIn this context, this page will attempt to answer the following task under Mini-Challenge 2 of the VAST Challenge: Identify companies that fit a pattern of illegal fishing. Use visualizations to support your conclusions and your confidence in them. Limit your response to 300 words and 4 images.\n\n\n\n\nShow the code\npacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, lubridate, tidyverse, ggiraph, treemap, treemapify)\n\n\n\n\nShow the code\nmc2_data <- \n  fromJSON(\"data/mc2_challenge_graph.json\")\n\n\n\n\n\n\n\nShow the code\nglimpse(mc2_data)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     : Named list()\n $ nodes     :'data.frame': 34576 obs. of  4 variables:\n  ..$ shpcountry: chr [1:34576] \"Polarinda\" NA \"Oceanus\" NA ...\n  ..$ rcvcountry: chr [1:34576] \"Oceanus\" NA \"Oceanus\" NA ...\n  ..$ dataset   : chr [1:34576] \"MC2\" \"MC2\" \"MC2\" \"MC2\" ...\n  ..$ id        : chr [1:34576] \"AquaDelight Inc and Son's\" \"BaringoAmerica Marine Ges.m.b.H.\" \"Yu gan  Sea spray GmbH Industrial\" \"FlounderLeska Marine BV\" ...\n $ links     :'data.frame': 5464378 obs. of  9 variables:\n  ..$ arrivaldate     : chr [1:5464378] \"2034-02-12\" \"2034-03-13\" \"2028-02-07\" \"2028-02-23\" ...\n  ..$ hscode          : chr [1:5464378] \"630630\" \"630630\" \"470710\" \"470710\" ...\n  ..$ valueofgoods_omu: num [1:5464378] 141015 141015 NA NA NA ...\n  ..$ volumeteu       : num [1:5464378] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ weightkg        : int [1:5464378] 4780 6125 10855 11250 11165 11290 9000 19490 6865 19065 ...\n  ..$ dataset         : chr [1:5464378] \"MC2\" \"MC2\" \"MC2\" \"MC2\" ...\n  ..$ source          : chr [1:5464378] \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" ...\n  ..$ target          : chr [1:5464378] \"BaringoAmerica Marine Ges.m.b.H.\" \"BaringoAmerica Marine Ges.m.b.H.\" \"-15045\" \"-15045\" ...\n  ..$ valueofgoodsusd : num [1:5464378] NA NA NA NA NA ...\n\n\n\n\n\n\n\nShow the code\nmc2_nodes <- as_tibble(mc2_data$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\n\n\n\n\n\n\n\nNote\n\n\n\nRemoved columns with large number of missing data, namely: valueofgoods_omu, volumeteu, valueofgoodsusd.\n\n\n\n\n\n\n\nShow the code\nmc2_edges <- as_tibble(mc2_data$links) %>%\n  mutate(ArrivalDate = ymd(arrivaldate)) %>%\n  mutate(Year = year(ArrivalDate)) %>%\n  select(source, target, ArrivalDate, Year, hscode, weightkg) %>% \n  distinct()\n\n\n\n\n\n\n\nShow the code\nany(duplicated(mc2_nodes))\n\n\n[1] FALSE\n\n\nShow the code\nany(duplicated(mc2_edges))\n\n\n[1] FALSE\n\n\n\n\n\n\n\nShow the code\nmc2_edges_cleandupe <- mc2_edges[!duplicated(mc2_edges), ]\n\n\n\n\n\n\n\nShow the code\nlength(unique(mc2_edges$hscode))\n\n\n[1] 4761\n\n\n\n\n\n\n\n\nNote\n\n\n\nRemoved hscodes that unlikely belong to fishery, based on https://connect2india.com/hs-classification.html. Also removed likely codes for processed foods.\n\n\n\n\nShow the code\nmc2_edges_pure <- mc2_edges_cleandupe[grepl('^301|^302|^303|^305', mc2_edges$hscode), ]\n\nlength(unique(mc2_edges_pure$hscode))\n\n\n[1] 105\n\n\n\n\n\nPerform group by ‘source’, ‘target’ and ‘Year’, and aggregate the total count of exchanges\n\n\nShow the code\nmc2_edges_aggregated <- mc2_edges_pure %>%\n  group_by(source, target, Year) %>%\n    summarise(weights = n(),\n              sum_weightkg = sum(weightkg),\n              hscode=first(hscode)) %>%\n  filter(source!=target) %>%\n  filter(weights > 10) %>%\n  ungroup()\n\nglimpse(mc2_edges_aggregated)\n\n\nRows: 1,091\nColumns: 6\n$ source       <chr> \"1 Limited Liability Company\", \"2 Limited Liability Compa…\n$ target       <chr> \"Olas del Mar Worldwide\", \"Caracola del Sol Services\", \"C…\n$ Year         <dbl> 2034, 2031, 2033, 2034, 2034, 2033, 2034, 2031, 2033, 203…\n$ weights      <int> 23, 13, 11, 11, 12, 31, 30, 29, 15, 15, 18, 24, 12, 18, 1…\n$ sum_weightkg <int> 442330, 269465, 234940, 231170, 314595, 683805, 651800, 6…\n$ hscode       <chr> \"303630\", \"303230\", \"303230\", \"303230\", \"303230\", \"303230…\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is to remove targets with too few relationships.\n\n\n\n\nShow the code\n#|eval: false\n#|echo: false\n\nrelationship_count <- table(mc2_edges_aggregated$target)\n\nrelationship_count_heavy <- names(relationship_count[relationship_count >= 4])\n\nmc2_edges_aggregated <- mc2_edges_aggregated[mc2_edges_aggregated$target %in% relationship_count_heavy, ]\n\nprint(mc2_edges_aggregated)\n\n\n# A tibble: 867 × 6\n   source                      target           Year weights sum_weightkg hscode\n   <chr>                       <chr>           <dbl>   <int>        <int> <chr> \n 1 1 Limited Liability Company Olas del Mar W…  2034      23       442330 303630\n 2 2 Limited Liability Company Caracola del S…  2031      13       269465 303230\n 3 2 Limited Liability Company Costa de la Fe…  2033      11       234940 303230\n 4 2 Limited Liability Company Costa de la Fe…  2034      11       231170 303230\n 5 2 Limited Liability Company David Ltd. Lia…  2034      12       314595 303230\n 6 2 Limited Liability Company Faroe Islands …  2033      31       683805 303230\n 7 2 Limited Liability Company Faroe Islands …  2034      30       651800 303230\n 8 2 Limited Liability Company Mar del Este C…  2031      29       653630 303230\n 9 2 Limited Liability Company Mar del Este C…  2033      15       325010 303230\n10 2 Limited Liability Company Pao gan SE Seal  2032      15       349520 303230\n# ℹ 857 more rows\n\n\n\n\n\n\n\nShow the code\nid1 <- mc2_edges_aggregated %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- mc2_edges_aggregated %>%\n  select(target) %>%\n  rename(id = target)\nmc2_nodes_extracted <- rbind(id1, id2) %>%\n  distinct()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#nodes-table-filter-nodes",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#nodes-table-filter-nodes",
    "title": "Take home 2",
    "section": "Nodes Table & Filter nodes",
    "text": "Nodes Table & Filter nodes\n\n\nShow the code\nid1 <- mc2_edges_aggregated %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- mc2_edges_aggregated %>%\n  select(target) %>%\n  rename(id = target)\nmc2_nodes_extracted <- rbind(id1, id2) %>%\n  distinct()\n\n\n\nTaking a deeper look at Tuna Data\n#Chose the tuna dataset as the literature review suggests that Tuna is highly related to IUU\n\n\nShow the code\nglimpse(tuna)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     : Named list()\n $ nodes     :'data.frame': 29 obs. of  4 variables:\n  ..$ shpcountry: chr [1:29] \"Utoporiana\" NA \"Rio Isla\" NA ...\n  ..$ dataset   : chr [1:29] \"MC2\" \"MC2\" \"MC2\" \"MC2\" ...\n  ..$ id        : chr [1:29] \"Andhra Pradesh  Sp Worldwide\" \"Jharkhand Sea  S.p.A. United\" \"Dutch Mussels Pic Marine biology\" \"Congo Rapids   Ltd. Corporation\" ...\n  ..$ rcvcountry: chr [1:29] NA \"-27\" \"-27\" \"Azurionix\" ...\n $ links     :'data.frame': 314 obs. of  7 variables:\n  ..$ arrivaldate     : chr [1:314] \"2034-09-21\" \"2034-08-30\" \"2034-08-19\" \"2034-09-21\" ...\n  ..$ hscode          : int [1:314] 840999 846820 220300 220300 847989 441600 850440 441600 840999 853990 ...\n  ..$ generated_by    : chr [1:314] \"tuna\" \"tuna\" \"tuna\" \"tuna\" ...\n  ..$ dataset         : chr [1:314] \"MC2\" \"MC2\" \"MC2\" \"MC2\" ...\n  ..$ source          : chr [1:314] \"Andhra Pradesh  Sp Worldwide\" \"Andhra Pradesh  Sp Worldwide\" \"Andhra Pradesh  Sp Worldwide\" \"Andhra Pradesh  Sp Worldwide\" ...\n  ..$ target          : chr [1:314] \"Jharkhand Sea  S.p.A. United\" \"Jharkhand Sea  S.p.A. United\" \"Jharkhand Sea  S.p.A. United\" \"Jharkhand Sea  S.p.A. United\" ...\n  ..$ valueofgoods_omu: num [1:314] NA NA NA NA NA NA NA NA NA NA ...\n\n\n\n\nShow the code\ntuna_nodes <- as_tibble(tuna$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\n\n\n\nShow the code\ntuna_edges <- as_tibble(tuna$links) %>%\n  mutate(Arrivaldate = ymd(arrivaldate)) %>%\n  mutate(Year = year(Arrivaldate)) %>%\n  mutate(MonthYear = format(Arrivaldate, \"%B %Y\")) %>%\n  select(source, target, hscode, Arrivaldate, MonthYear, valueofgoods_omu)\n\n\n\n\nShow the code\ntuna_edges_aggregated <- tuna_edges %>%\n  group_by(source, target) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n`summarise()` has grouped output by 'source'. You can override using the\n`.groups` argument.\n\n\n#table graph for Tuna dataset\n\n\nShow the code\ntuna_graph <- tbl_graph(nodes = tuna_nodes,\n                        edges = tuna_edges_aggregated,\n                        directed = TRUE)\n\ntuna_graph %>%\n  activate(edges) %>%\n  arrange(desc(weights))\n\n\n# A tbl_graph: 29 nodes and 21 edges\n#\n# A rooted forest with 8 trees\n#\n# A tibble: 21 × 3\n   from    to weights\n  <int> <int>   <int>\n1     1     2     104\n2    12    13      20\n3    23    24      20\n4     3     4      12\n5     5    19      11\n6     7    15      10\n# ℹ 15 more rows\n#\n# A tibble: 29 × 3\n  id                               shpcountry rcvcountry\n  <chr>                            <chr>      <chr>     \n1 Andhra Pradesh  Sp Worldwide     Utoporiana <NA>      \n2 Jharkhand Sea  S.p.A. United     <NA>       -27       \n3 Dutch Mussels Pic Marine biology Rio Isla   -27       \n# ℹ 26 more rows\n\n\nShow the code\ntuna_graph\n\n\n# A tbl_graph: 29 nodes and 21 edges\n#\n# A rooted forest with 8 trees\n#\n# A tibble: 29 × 3\n  id                                            shpcountry rcvcountry\n  <chr>                                         <chr>      <chr>     \n1 Andhra Pradesh  Sp Worldwide                  Utoporiana <NA>      \n2 Jharkhand Sea  S.p.A. United                  <NA>       -27       \n3 Dutch Mussels Pic Marine biology              Rio Isla   -27       \n4 Congo Rapids   Ltd. Corporation               <NA>       Azurionix \n5 Brisa Marina Surfboard AB Marine conservation -27        <NA>      \n6 Mar de la Felicidad Inc Motorboat             <NA>       -27       \n# ℹ 23 more rows\n#\n# A tibble: 21 × 3\n   from    to weights\n  <int> <int>   <int>\n1     1     2     104\n2    17    18       7\n3     5    11       2\n# ℹ 18 more rows\n\n\n\n\nShow the code\nmc2_graph <- tbl_graph(nodes = mc2_nodes_extracted,\n                       edges = mc2_edges_aggregated,\n                       directed = TRUE)\n\n\n\n\nShow the code\n#|echo: false\nmc2_graph\n\n\n# A tbl_graph: 509 nodes and 1091 edges\n#\n# A directed acyclic multigraph with 40 components\n#\n# A tibble: 509 × 1\n  id                                    \n  <chr>                                 \n1 1 Limited Liability Company           \n2 2 Limited Liability Company           \n3 5 Sashimi NV Holdings                 \n4 Adriatic Mackerel BV Logistics        \n5 Andaman  Ltd. Liability Co            \n6 Andhra Pradesh   Sextant Oyj Forwading\n# ℹ 503 more rows\n#\n# A tibble: 1,091 × 4\n   from    to  Year weights\n  <int> <int> <dbl>   <int>\n1     1   314  2034      23\n2     2   315  2031      13\n3     2   316  2033      11\n# ℹ 1,088 more rows\n\n\n\n\n\n\n\nShow the code\nggraph(mc2_graph,\n       layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes()) +\n  theme_graph()\n\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\n\n\nShow the code\nwrite_rds(mc2_nodes_extracted, \"data/mc2_nodes_extracted.rds\")\nwrite_rds(mc2_edges_aggregated, \"data/mc2_edges_aggregated.rds\")\nwrite_rds(mc2_graph, \"data/mc2_graph.rds\")\n\n\n\n\nShow the code\nmc2_graph\n\n\n# A tbl_graph: 509 nodes and 1091 edges\n#\n# A directed acyclic multigraph with 40 components\n#\n# A tibble: 509 × 1\n  id                                    \n  <chr>                                 \n1 1 Limited Liability Company           \n2 2 Limited Liability Company           \n3 5 Sashimi NV Holdings                 \n4 Adriatic Mackerel BV Logistics        \n5 Andaman  Ltd. Liability Co            \n6 Andhra Pradesh   Sextant Oyj Forwading\n# ℹ 503 more rows\n#\n# A tibble: 1,091 × 4\n   from    to  Year weights\n  <int> <int> <dbl>   <int>\n1     1   314  2034      23\n2     2   315  2031      13\n3     2   316  2033      11\n# ℹ 1,088 more rows\n\n\n\n\nShow the code\nedges_df <- mc2_graph %>%\n  activate(edges) %>%\n  as_tibble()\n\n\n\n\nShow the code\nnodes_df <- mc2_graph %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label)\n\n\nWarning: `as.tibble()` was deprecated in tibble 2.0.0.\nℹ Please use `as_tibble()` instead.\nℹ The signature and semantics have changed, see `?as_tibble`.\n\n\n\n\nShow the code\nvisNetwork(nodes_df,\n           edges_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\"))\n\n\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_df,\n           edges_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take home Exercise 3",
    "section": "",
    "text": "Show the code\npacman::p_load(jsonlite, tidygraph, ggraph, \n               visNetwork, graphlayouts, ggforce, \n               skimr, tidytext, tidyverse, ggplot2, skimr, tm)\n###Check missing values"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#create-network-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#create-network-graph",
    "title": "Take home Exercise 2",
    "section": "Create Network graph",
    "text": "Create Network graph\n\n\nShow the code\nmc2_graph <- tbl_graph(nodes = mc2_nodes_extracted,\n                       edges = mc2_edges_aggregated,\n                       directed = TRUE)\n\n\n\n\nShow the code\n#|echo: false\nmc2_graph\n\n\n# A tbl_graph: 317 nodes and 867 edges\n#\n# A directed acyclic multigraph with 7 components\n#\n# A tibble: 317 × 1\n  id                                    \n  <chr>                                 \n1 1 Limited Liability Company           \n2 2 Limited Liability Company           \n3 Adriatic Mackerel BV Logistics        \n4 Andhra Pradesh   Sextant Oyj Forwading\n5 Andhra Pradesh  Ltd. Liability Co     \n6 Angeline Sea NV Worldwide             \n# ℹ 311 more rows\n#\n# A tibble: 867 × 6\n   from    to  Year weights sum_weightkg hscode\n  <int> <int> <dbl>   <int>        <int> <chr> \n1     1   256  2034      23       442330 303630\n2     2   257  2031      13       269465 303230\n3     2   258  2033      11       234940 303230\n# ℹ 864 more rows\n\n\n\n\nShow the code\nggraph(mc2_graph,\n       layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes()) +\n  theme_graph()\n\n\n\n\n\n\n\nShow the code\nwrite_rds(mc2_nodes_extracted, \"data/mc2_nodes_extracted.rds\")\nwrite_rds(mc2_edges_aggregated, \"data/mc2_edges_aggregated.rds\")\nwrite_rds(mc2_graph, \"data/mc2_graph.rds\")\n\n\n\n\nShow the code\nedges_df <- mc2_graph %>%\n  activate(edges) %>%\n  as_tibble()\n\n\n\n\nShow the code\nnodes_df <- mc2_graph %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label)\n\n\n\n\nShow the code\nvisNetwork(nodes_df,\n           edges_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\"))\n\n\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_df,\n           edges_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE)\n\n\n\n\n\n\n\ncalculate various centrality measures\n\n\nShow the code\nmeasures_graph<- mc2_graph %>%\n  activate(\"nodes\") %>% \n  mutate(betweenness_centrality = centrality_betweenness(directed = TRUE)) %>% \n  mutate(in_deg_centrality = centrality_degree(weights = weights, \n                                               mode = \"in\")) %>% \n  mutate(out_deg_centrality = centrality_degree(weights = weights, \n                                               mode = \"out\")) %>%\n  mutate(pagerank_centrality = centrality_pagerank(weights = weights,\n                                                  directed = TRUE))\n\n\n\n\nShow the code\nbtw_graph<- measures_graph %>% \n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(betweenness_centrality)) %>% \n  select(id,betweenness_centrality) %>% \n  head(n=5)\n\n\nDT::datatable(btw_graph, class = \"compact\", colnames = c(\"Name of Company\",\"Betweenness Centrality\"),\n              caption = 'Table 1: Top 5 Companies by Betweenness Centrality')\n\n\n\n\n\n\n\n\n\nShow the code\nin_deg_graph<- measures_graph %>% \n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(in_deg_centrality)) %>% \n  select(id,in_deg_centrality) %>% \n  head(n=5)\n\n\nDT::datatable(in_deg_graph, class = \"compact\", colnames = c(\"Name of Company\",\"In-Degree Centrality\"),\n              caption = 'Table 2: Top 5 Companies by In-Degree')\n\n\n\n\n\n\n\n\n\nShow the code\nout_deg_graph<- measures_graph %>% \n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(out_deg_centrality)) %>% \n  select(id,out_deg_centrality) %>% \n  head(n=5)\n\nDT::datatable(out_deg_graph, class = \"compact\", colnames = c(\"Name of Company\",\"Out-Degree Centrality\"),\n              caption = 'Table 3: Top 5 Companies by Out-Degree')\n\n\n\n\n\n\n\n\n\n3.2 Interactive graph for top 2 in-degree centrality compan\n\n\nShow the code\nn <- 2\ntop_n_in_deg_list <- measures_graph %>% \n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(in_deg_centrality)) %>% \n  top_n(n,wt = in_deg_centrality) %>%\n  pull(id)\n\n\n\n\nShow the code\nmc2_edges_agg_in <- mc2_edges_aggregated %>%\n  filter(target %in% top_n_in_deg_list | source %in% top_n_in_deg_list)\n\n\n\n\nShow the code\nmc2_nodes_in <- mc2_nodes %>%\n  filter (id %in% c(mc2_edges_agg_in$source, mc2_edges_agg_in$target))\n\n\n\n\nShow the code\nmc2_edges_agg_in <- mc2_edges_agg_in %>%\n  group_by(source, target) %>%\n  mutate(total_shipped_weightkg = sum(sum_weightkg))\n\n\n\n\nShow the code\nmc2_edges_agg_vis_in <- mc2_edges_agg_in %>% \n  rename(from = source) %>% \n  rename(to = target) %>% \n  mutate(title = paste('Total shipment weight = ',total_shipped_weightkg, \"\\n HSCODE =\", hscode))\n\n\n\n\nShow the code\nmc2_nodes_vis_in <- mc2_nodes_in %>% \n  mutate(title = paste('shpcountry =', shpcountry, ',',\n                       'rcvcountry =', rcvcountry, ',',\n                       '\\n In-deg = ', measures_graph$in_deg_centrality, ',',\n                       \"\\n Betweenness =\", measures_graph$betweenness_centrality, ',',\n                       \"\\n Out-deg =\", measures_graph$out_deg_centrality))\n\n\n\n\nFiltered ego network of the top 2 companies\n\n\nShow the code\n#| fig-width: 12\n#| fig-asp: 0.555\nset.seed(1234)\nvisNetwork(mc2_nodes_vis_in,\n           mc2_edges_agg_vis_in,\n           main = \"Ego Network of top 2 In-Degree companies\",\n           height = \"600px\", width = \"100%\") %>%\n  visIgraphLayout(layout = \"layout_nicely\") %>%\n  visEdges(arrows = 'to',\n           smooth = list(enables = TRUE,\n                         type= 'straightCross'),\n           shadow = FALSE,\n           dash = FALSE) %>% \n  visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),\n             nodesIdSelection = TRUE) %>%\n  visInteraction(hideEdgesOnDrag = TRUE) %>% \n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n### 3.3 Interactive graph for top 5 Out-degree centrality companies\n\n\n### Temporal analysis of Top N in-deg centrality companies. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 2\ntop_n_in_list <- measures_graph %>%\n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(in_deg_centrality)) %>% \n  top_n(n,wt = in_deg_centrality) %>%\n  pull(id)\n:::\n\n\n\n\n\nShow the code\nmc2_edges_agg_in_top_n <- mc2_edges_aggregated[mc2_edges_aggregated$target %in% top_n_in_list, ]\n\n\n\n\n::: {.cell}\n\n:::\n::: {.cell}\n\n```{.r .cell-code}\ntopn <- mc2_edges_agg_in_top_n %>%\n  group_by(source, Year) %>%\n  summarise(total_weight_by_year = sum(weights)) %>%\n  ungroup() \n\ntopn <- topn  %>%  group_by(source) %>%\n  mutate(maxweightyear = as.character(Year[which.max(total_weight_by_year)])) %>%\n  ungroup()\n:::\n### Heatmap\n\n::: {.cell}\n\n:::\n::: {.cell fig.asp='0.555'}\n\n```{.r .cell-code}\nplotfrom <- \"2028-01-01\"\nplotto <- '2035-01-01'\n\nggplot(topn, aes(x = Year, y = fct_reorder(source, maxweightyear), fill = total_weight_by_year))+\n  geom_tile(colour=\"White\", show.legend=TRUE) +\n  scale_fill_distiller(palette=\"Spectral\") +\n  scale_y_discrete(name=\"\", expand=c(0,0))+\n  labs(title=\"Heatmap of shipping interactions\",\n       subtitle=paste0(\"Top receiving companies from \", \n                       plotfrom, ' to ', plotto)) +\n  theme_classic() +\n  \n  theme(axis.line.y=element_blank(), plot.subtitle=element_text(size=rel(0.78)),\n        plot.title.position=\"plot\",\n        axis.text.y=element_text(colour=\"Black\",size=5), \n        plot.title=element_text(size=rel(2.3))) +\n\n  guides(fill = guide_colorbar(title = \"Total Weight\", title.position = \"top\",\n                               direction = \"horizontal\", nbin = 5))\n\n\n\n\nShow the code\n  ggsave(\"heatmap.png\", height = 30, width = 15, dpi = 300)\n\n:::\n\n\nFinding: there are some source companies that are only active in certain years, namely,\nThese maybe involved in IUU, changing their names frequently.\n```\n\n\nsection 3.2.2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#create-network-graphs",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#create-network-graphs",
    "title": "Take home Exercise 2",
    "section": "2. Create Network graphs",
    "text": "2. Create Network graphs\n\n2.1 Create MC2 network graph\n\n\nShow the code\nmc2_graph <- tbl_graph(nodes = mc2_nodes_extracted,\n                       edges = mc2_edges_aggregated,\n                       directed = TRUE)\n\n\n\n\n2.1.1 Check MC2 graph\n\n\nShow the code\n#|echo: false\nmc2_graph\n\n\n# A tbl_graph: 317 nodes and 867 edges\n#\n# A directed acyclic multigraph with 7 components\n#\n# A tibble: 317 × 1\n  id                                    \n  <chr>                                 \n1 1 Limited Liability Company           \n2 2 Limited Liability Company           \n3 Adriatic Mackerel BV Logistics        \n4 Andhra Pradesh   Sextant Oyj Forwading\n5 Andhra Pradesh  Ltd. Liability Co     \n6 Angeline Sea NV Worldwide             \n# ℹ 311 more rows\n#\n# A tibble: 867 × 6\n   from    to  Year weights sum_weightkg hscode\n  <int> <int> <dbl>   <int>        <int> <chr> \n1     1   256  2034      23       442330 303630\n2     2   257  2031      13       269465 303230\n3     2   258  2033      11       234940 303230\n# ℹ 864 more rows\n\n\n\n\n2.1.2 Visualize MC2 Graph\n\n\nShow the code\nggraph(mc2_graph,\n       layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes()) +\n  theme_graph()\n\n\n\n\n\n\n\n2.1.3 Write RDS\n\n\nShow the code\nwrite_rds(mc2_nodes_extracted, \"data/mc2_nodes_extracted.rds\")\nwrite_rds(mc2_edges_aggregated, \"data/mc2_edges_aggregated.rds\")\nwrite_rds(mc2_graph, \"data/mc2_graph.rds\")\n\n\n\n\n2.1.4 Create visNetwork Graph\n\n\nShow the code\nedges_df <- mc2_graph %>%\n  activate(edges) %>%\n  as_tibble()\n\n\n\n\nShow the code\nnodes_df <- mc2_graph %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label)\n\n\n\n\nShow the code\nvisNetwork(nodes_df,\n           edges_df,\n           main = \"visNetwork of Nodes and Edges\") %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\"))\n\n\n\n\n\n\n###2.1.5 Create Interactive VisNetwork with nodes ID Selection\n\n\nShow the code\nvisNetwork(nodes_df,\n           edges_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#analytics",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#analytics",
    "title": "Take home Exercise 2",
    "section": "3. Analytics",
    "text": "3. Analytics\n\n3.1 calculate various centrality measures\n\n\nShow the code\nmeasures_graph<- mc2_graph %>%\n  activate(\"nodes\") %>% \n  mutate(betweenness_centrality = centrality_betweenness(directed = TRUE)) %>% \n  mutate(in_deg_centrality = centrality_degree(weights = weights, \n                                               mode = \"in\")) %>% \n  mutate(out_deg_centrality = centrality_degree(weights = weights, \n                                               mode = \"out\"))\n\n\n\n\n3.2 Top 5 Companies in terms of Betweenness Centrality\n\n\nShow the code\nbtw_graph<- measures_graph %>% \n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(betweenness_centrality)) %>% \n  select(id,betweenness_centrality) %>% \n  head(n=5)\n\n\nDT::datatable(btw_graph, class = \"compact\", colnames = c(\"Name of Company\",\"Betweenness Centrality\"),\n              caption = 'Table 1: Top 5 Companies by Betweenness Centrality')\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nExplored Betweenness Centrality but only one company has betweeness centrality greater than 0. This can be attributed to the extensive data narrow down around HS code and weight I have done earlier.\n\n\n\n\n3.3 Top 5 Companies in terms of In-degree Centrality\n\n\nShow the code\nin_deg_graph<- measures_graph %>% \n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(in_deg_centrality)) %>% \n  select(id,in_deg_centrality) %>% \n  head(n=5)\n\n\nDT::datatable(in_deg_graph, class = \"compact\", colnames = c(\"Name of Company\",\"In-Degree Centrality\"),\n              caption = 'Table 1: Top 5 Companies by In-Degree')\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nTop 2 companies standout in terms of in-degree. These companies focus heavily on inflow activities. According to literature reviews, these are potentially central carriers that help fishing vessels with transshipping.\nTreemaps at section 3.7 below will help explain who are main trading partners (potentially fishing vessels) of these companies.\n\n\n\n\n3.4 Top 5 Companies in terms of Out Degree Centrality\n\n\nShow the code\nout_deg_graph<- measures_graph %>% \n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(out_deg_centrality)) %>% \n  select(id,out_deg_centrality) %>% \n  head(n=5)\n\nDT::datatable(out_deg_graph, class = \"compact\", colnames = c(\"Name of Company\",\"Out-Degree Centrality\"),\n              caption = 'Table 2: Top 5 Companies by Out-Degree')\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIdentified Top 5 Out-Degree Companies that are primarily involved in exports. Could not find any company that particularly stands out.\n\n\n\n\n3.5 Interactive graph for Top 2 Companies in terms of in-degree Centrality\n\n3.5.1 Prepare the graph\n\n\nShow the code\nn <- 2\ntop_n_in_deg_list <- measures_graph %>% \n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(in_deg_centrality)) %>% \n  top_n(n,wt = in_deg_centrality) %>%\n  pull(id)\n\nmc2_edges_agg_in <- mc2_edges_aggregated %>%\n  filter(target %in% top_n_in_deg_list | source %in% top_n_in_deg_list)\n\nmc2_nodes_in <- mc2_nodes %>%\n  filter (id %in% c(mc2_edges_agg_in$source, mc2_edges_agg_in$target))\n\nmc2_edges_agg_in <- mc2_edges_agg_in %>%\n  group_by(source, target) %>%\n  mutate(total_shipped_weightkg = sum(sum_weightkg))\n\nmc2_edges_agg_vis_in <- mc2_edges_agg_in %>% \n  rename(from = source) %>% \n  rename(to = target) %>% \n  mutate(title = paste('Total shipment weight = ',total_shipped_weightkg, \"\\n HSCODE =\", hscode))\n\nmc2_nodes_vis_in <- mc2_nodes_in %>% \n  mutate(title = paste('shpcountry =', shpcountry, ',',\n                       'rcvcountry =', rcvcountry, ',',\n                       '\\n In-deg = ', measures_graph$in_deg_centrality, ',',\n                       \"\\n Betweenness =\", measures_graph$betweenness_centrality, ',',\n                       \"\\n Out-deg =\", measures_graph$out_deg_centrality))\n\n\n\n\n3.5.2 Filtered Ego Network of the top 2 In-Degree companies\n\n\nShow the code\n#| fig-width: 12\n#| fig-asp: 0.555\nset.seed(1234)\nvisNetwork(mc2_nodes_vis_in,\n           mc2_edges_agg_vis_in,\n           main = \"Filtered Ego Network of top 2 In-Degree companies\",\n           height = \"600px\", width = \"100%\") %>%\n  visIgraphLayout(layout = \"layout_with_kk\") %>%\n  visEdges(arrows = 'to',\n           smooth = list(enables = TRUE,\n                         type= 'straightCross'),\n           shadow = FALSE,\n           dash = FALSE) %>% \n  visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),\n             nodesIdSelection = TRUE) %>%\n  visInteraction(hideEdgesOnDrag = TRUE) %>% \n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhile the Top 2 companies have their own networks of business partners, they also have a shared network of common business partners.\n\n\n\n\n\n3.6 Interactive graph for top 5 Out-degree centrality companies\n\n\nShow the code\nn <- 5\ntop_n_out_list <- measures_graph %>%\n  activate(\"nodes\") %>% \n  as_tibble() %>% \n  arrange(desc(out_deg_centrality)) %>% \n  top_n(n,wt = out_deg_centrality) %>%\n  pull(id)\n\n\nmc2_edges_agg_out_top_n <- mc2_edges_aggregated[mc2_edges_aggregated$source %in% top_n_out_list, ]\n\n\nmc2_nodes_out <- mc2_nodes %>%\n  filter (id %in% c(mc2_edges_agg_out_top_n$source, mc2_edges_agg_out_top_n$target))\n\nmc2_edges_agg_out_top_n <- mc2_edges_agg_out_top_n %>%\n  group_by(source, target) %>%\n  mutate(total_shipped_weightkg = sum(sum_weightkg))\n\n\nmc2_edges_agg_vis_out <- mc2_edges_agg_out_top_n %>% \n  rename(from = source) %>% \n  rename(to = target) %>% \n  mutate(title = paste('Total shipment weight = ',total_shipped_weightkg, \"\\n HSCODE =\", hscode))\n\nmc2_nodes_vis_out <- mc2_nodes_out %>% \n  mutate(title = paste('shpcountry =', shpcountry, ',',\n                       'rcvcountry =', rcvcountry, ',',\n                       '\\n In-deg = ', measures_graph$in_deg_centrality, ',',\n                       \"\\n Betweenness =\", measures_graph$betweenness_centrality, ',',\n                       \"\\n Out-deg =\", measures_graph$out_deg_centrality))\n\n\n\n\nShow the code\n#| fig-width: 12\n#| fig-asp: 0.555\nset.seed(1234)\nvisNetwork(mc2_nodes_vis_out,\n           mc2_edges_agg_vis_out,\n           main = \"Filtered Ego Network of top 5 Out-Degree companies\",\n           height = \"600px\", width = \"100%\") %>%\n  visIgraphLayout(layout = \"layout_with_kk\") %>%\n  visEdges(arrows = 'to',\n           smooth = list(enables = TRUE,\n                         type= 'straightCross'),\n           shadow = FALSE,\n           dash = FALSE) %>% \n  visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),\n             nodesIdSelection = TRUE) %>%\n  visInteraction(hideEdgesOnDrag = TRUE) %>% \n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAgain, these are Top 5 Out-Degree Companies that are primarily involved in exports. Could not find any company that particularly stands out. We will shift our focus back to the Top 2 In-Degree Companies.\n\n\n\n\n3.7 Tree Map Analysis of trading relationships of the Top 2 In-Degree companies\n\n\n\n\n\n\nNote\n\n\n\nTop 2 In-degree companies are: hǎi dǎn Corporation Wharf and Mar del Este CJSC\n\n\n\n3.7.1 hǎi dǎn Corporation Wharf Relationships\n\n\nShow the code\nhai_dan_df<-mc2_edges_agg_vis_in %>%\n  filter(to %in% 'hǎi dǎn Corporation Wharf')\n\ntreemap(hai_dan_df,\n        index=c(\"from\"),\n        vSize=\"weights\",\n        vColor=\"weights\",\n        type=\"value\",\n        palette=\"RdYlBu\",\n        title=\"Companies who Trade with hǎi dǎn Corporation Wharf in terms of weightkg\")\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nMount Kenya, ReefR, and Aqua Aura SE stand out the most as top business partners of hǎi dǎn Corporation Wharf. It would be worth investigating these companies as to where they are incorporated, additional trade relationships etc.\n\n\n\n\n3.7.2 Mar del Este CJSC\n\n\nShow the code\nmar_del_df<-mc2_edges_agg_vis_in %>%\n  filter(to %in% 'Mar del Este CJSC')\n\ntreemap(mar_del_df,\n        index=c(\"from\"),\n        vSize=\"weights\",\n        vColor=\"weights\",\n        type=\"value\",\n        palette=\"RdYlBu\",\n        title=\"Companies who Trade with Mar del Este CJSC in terms of weightkg\")\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nTiao piao AG Delivery and Belgian Harbor OAO Freight stand out the most as top business partners of Mar del Este CJSC. It would be worth investigating these companies as to where they are incorporated, additional trade relationships etc."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#references",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#references",
    "title": "Take home Exercise 2",
    "section": "6. References",
    "text": "6. References\nPetrossian, G., & Barthuly, B., & Sonowski, M. (2022, March 31). Identifying Central Carriers and Detecting Key Communities Within the Global Fish Transshipment Networks\nPark, A. Stamato, S. (2020). Social Network Analysis of Global Transshipment: A Framework for Discovering Illegal Fishing Networks"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "title": "in class 07",
    "section": "",
    "text": "Show the code\npacman::p_load(ggHoriPlot, ggthemes, tidyverse)\n\n\n\n\nShow the code\naverp <- read_csv(\"data/AVERP.csv\") %>%\n  mutate(`Date` = dmy(`Date`))\n\n\nRows: 7452 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Date, Consumer Items\ndbl (1): Values\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nShow the code\nglimpse(averp)\n\n\nRows: 7,452\nColumns: 3\n$ Date             <date> 2014-01-01, 2014-02-01, 2014-03-01, 2014-04-01, 2014…\n$ `Consumer Items` <chr> \"Wholemeal Bread (Per 400 Gram)\", \"Wholemeal Bread (P…\n$ Values           <dbl> 2.05, 2.05, 2.04, 2.04, 2.05, 2.05, 2.05, 2.05, 2.04,…\n\n\n\n\nShow the code\naverp %>% \n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')\n\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#create-network-graphs-for-exploratory-data-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#create-network-graphs-for-exploratory-data-analysis",
    "title": "Take home Exercise 2",
    "section": "2. Create Network graphs for Exploratory Data Analysis",
    "text": "2. Create Network graphs for Exploratory Data Analysis\n\n2.1 Create the Network graph\n\n\nShow the code\nmc2_graph <- tbl_graph(nodes = mc2_nodes_extracted,\n                       edges = mc2_edges_aggregated,\n                       directed = TRUE)\n\n\n\n\n2.1.1 Check the Network graph\n\n\nShow the code\n#|echo: false\nmc2_graph\n\n\n# A tbl_graph: 317 nodes and 867 edges\n#\n# A directed acyclic multigraph with 7 components\n#\n# A tibble: 317 × 1\n  id                                    \n  <chr>                                 \n1 1 Limited Liability Company           \n2 2 Limited Liability Company           \n3 Adriatic Mackerel BV Logistics        \n4 Andhra Pradesh   Sextant Oyj Forwading\n5 Andhra Pradesh  Ltd. Liability Co     \n6 Angeline Sea NV Worldwide             \n# ℹ 311 more rows\n#\n# A tibble: 867 × 6\n   from    to  Year weights sum_weightkg hscode\n  <int> <int> <dbl>   <int>        <int> <chr> \n1     1   256  2034      23       442330 303630\n2     2   257  2031      13       269465 303230\n3     2   258  2033      11       234940 303230\n# ℹ 864 more rows\n\n\n\n\n2.1.2 Visualize the Network Graph\n\n\nShow the code\nggraph(mc2_graph,\n       layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes()) +\n  theme_graph()\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nHard to deduce much relationship here, but it looks like the majority of the nodes are interconnected at the center area. Will be working on further filtering.\n\n\n\n\n2.1.3 Write RDS\n\n\nShow the code\nwrite_rds(mc2_nodes_extracted, \"data/mc2_nodes_extracted.rds\")\nwrite_rds(mc2_edges_aggregated, \"data/mc2_edges_aggregated.rds\")\nwrite_rds(mc2_graph, \"data/mc2_graph.rds\")\n\n\n\n\n2.1.4 Create visNetwork Graph\n\n\nShow the code\nedges_df <- mc2_graph %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_df <- mc2_graph %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label)\n\nvisNetwork(nodes_df,\n           edges_df,\n           main = \"visNetwork of Nodes and Edges\") %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\"))\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAgain, hard to deduce much relationship here, as the majority of the nodes are interconnected like spagetti at the center area. Will be working on further filtering.\n\n\n\n\n2.1.5 Create Interactive VisNetwork with nodes ID Selection\n\n\nShow the code\nvisNetwork(nodes_df,\n           edges_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNode ID selection is available now, but not enough to identify meaningful relationship. We can identify suspicious company names first and go back to this section later. Will be working on further narrow down."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#conclusion",
    "title": "Take home Exercise 2",
    "section": "4. Conclusion",
    "text": "4. Conclusion\nI was able to scan potential actors involved in Transshipping but some further analysis is definitely required.\nThe two Companies we have identified with the highest in-degree scores would worth further investigations, as these could be central carriers. According to literature reviews, central carriers help fishing vessels unload both at sea and at ports. They are mostly incorporated in open-registry countries (to avoid sanctions) and are often involved in illegal, unreported, or unregulated activities.\nWe were also able to identify 5 major trade partners of the aforementioned two companies. These 5 companies are likely fishing vessels who unload their share to central carriers. It would also be worthwhile to look into what these companies do in more detail."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#reflections",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#reflections",
    "title": "Take home Exercise 2",
    "section": "5. Reflections",
    "text": "5. Reflections\n\n5.1 Data limitation\nUnfortunately valueofgoods data was limited for custom-declared, and with lots of Nulls. As the main motivation behind illegal fishing would be money, it would be interesting to look at the valueofgoods and not just weightKg.\nIn addition, the VAST challenge data set did not have data on vessel locations, speed, etc, which makes it difficult for me to identify “likely” transshipment into detail.\n\n\n5.2 Striking the balance between simplicity vs. details\nAfter filtering by HS codes and weights, I was left with only 1k nodes. If I had more time, I would have spent more time looking at the distribution of the data, and follow the Pareto rule, etc."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands On Ex06",
    "section": "",
    "text": "pacman::p_load(plotly, tidyverse, DT, ggtern, urbnthemes)\n\nWarning: package 'urbnthemes' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2/PACKAGES'\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'urbnthemes'\n\n\nWarning in pacman::p_load(plotly, tidyverse, DT, ggtern, urbnthemes): Failed to install/load:\nurbnthemes\n\n\n\n\nShow the code\nlibrary(ggtern)\n\n\n\n\n\nDataset consists of demographic data about Singapore Residents by Planning Area Subzone, Age Group, Sex and Type of Dwelling (June 2000-2018)\n\n\nShow the code\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\nRows: 108126 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): PA, SZ, AG\ndbl (2): Year, Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nDerive new measures from the dataset, using mutate()\n\n\nShow the code\n#Deriving the young, old and economically categories\nagpop_mutated <- pop_data %>%\n  mutate(\n    `Year` = as.character(Year))%>%\n  pivot_wider(\n    names_from = AG, \n    values_from = Population) %>%\n  mutate(\n    YOUNG = rowSums(.[4:8]))%>%\n  mutate(\n    ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(\n    OLD = rowSums(.[17:21])) %>%\n  mutate(\n    TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\ndatatable(head(agpop_mutated))\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n#ternary plots take x,y,z values \nggtern(\n    data = agpop_mutated,\n    aes(x = YOUNG,\n        y= ACTIVE, \n        z = OLD)\n  ) +\n  geom_point() +\n  theme(\n    plot.background = element_rect(fill = \"#F8F3E6\"),\n    panel.background = element_rect(fill = \"#F8F3E6\")\n  )\n\n\n\n\n\n\n\n\n\n\nShow the code\nggtern(\n    data = agpop_mutated,\n    aes(x = YOUNG,\n        y= ACTIVE, \n        z = OLD)\n  ) +\n  geom_point() +\n  labs(\n    title=\"Population structure, 2015\"\n  ) +\n  theme_rgbw() +\n  theme(\n    plot.background = element_rect(fill = \"#F8F3E6\"),\n    panel.background = element_rect(fill = \"#F8F3E6\")\n  )\n\n\n\n\n\n\n\n\n\n\nShow the code\n# function for creating annotation object\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# function for axis formatting\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  # plot_ly uses a,b,c instead of x,y,z\n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"#3E4254\"), \n  # Make points more transparent to see overlaps\n  alpha = .7,\n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes,\n  # Add margin arguments to layout to prevent plot truncation \n    margin = list(t = 60,\n                  b = 60)\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#required-packages",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#required-packages",
    "title": "Hands On Ex06",
    "section": "Required packages",
    "text": "Required packages\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-1",
    "title": "Hands On Ex06",
    "section": "Data",
    "text": "Data\nA Wine Quality Data Set from the UCI Machine Learning Repository is used for this study.\n\n\n\n\n\n\n\n\n\n\n\nInput Variables\nfixed acidity\nvolatile acidity\ncitric acid\nresidual sugar\ndensity\n\n\n\n\n\nchlorides\nfree sulfur dioxide\nYes\ntotal sulfur dioxide\npH\n\n\nOutput Variables\nquality (0-10)\n\n\n\n\n\n\n\n\n\nShow the code\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nShow the code\ndatatable(head(wine))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#correlation-matrix-using-base-r-pairs",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#correlation-matrix-using-base-r-pairs",
    "title": "Hands On Ex06",
    "section": "2.1: Correlation Matrix using Base R pairs()",
    "text": "2.1: Correlation Matrix using Base R pairs()\n\n\nShow the code\n# Plot only columns 1 - 11\npairs(wine[,1:11])"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#lower-corner-upper-corner-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#lower-corner-upper-corner-matrix",
    "title": "Hands On Ex06",
    "section": "2.2: Lower Corner/ Upper Corner Matrix",
    "text": "2.2: Lower Corner/ Upper Corner Matrix\nLower\n\n\nShow the code\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\nUpper\n\n\nShow the code\npairs(wine[,2:12], lower.panel = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#including-correlation-coefficients-in-plots",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#including-correlation-coefficients-in-plots",
    "title": "Hands On Ex06",
    "section": "2.3: Including Correlation Coefficients in Plots",
    "text": "2.3: Including Correlation Coefficients in Plots\nThe complicated way\n\n\nShow the code\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#basic-plot",
    "title": "Hands On Ex06",
    "section": "4.1: Basic plot",
    "text": "4.1: Basic plot\n\n\nShow the code\ncorrplot(wine_cor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#working-with-shapes",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#working-with-shapes",
    "title": "Hands On Ex06",
    "section": "4.2: Working with shapes",
    "text": "4.2: Working with shapes\n\npieellipseshadenumber\n\n\n\n\nShow the code\ncorrplot(wine_cor,\n         method = \"pie\")\n\n\n\n\n\n\n\n\n\nShow the code\ncorrplot(wine_cor,\n         method = \"ellipse\")\n\n\n\n\n\n\n\n\n\nShow the code\ncorrplot(wine_cor,\n         method = \"shade\")\n\n\n\n\n\n\n\n\n\nShow the code\ncorrplot(wine_cor,\n         method = \"number\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#working-with-upper-lower-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#working-with-upper-lower-layouts",
    "title": "Hands On Ex06",
    "section": "4.3: Working with Upper & Lower Layouts",
    "text": "4.3: Working with Upper & Lower Layouts\n\n\nShow the code\ncorrplot(wine_cor,\n         method = \"shade\",\n         type = \"lower\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#working-with-mixed-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#working-with-mixed-layouts",
    "title": "Hands On Ex06",
    "section": "4.4: Working with Mixed layouts",
    "text": "4.4: Working with Mixed layouts\n\n\nShow the code\ncorrplot.mixed(wine_cor, \n               lower = \"circle\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#changing-font-colors-and-removing-elements",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#changing-font-colors-and-removing-elements",
    "title": "Hands On Ex06",
    "section": "4.5: Changing font colors and removing elements",
    "text": "4.5: Changing font colors and removing elements\n\n\nShow the code\ncorrplot(wine_cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"grey10\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#adding-test-of-significance-to-corrgram",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#adding-test-of-significance-to-corrgram",
    "title": "Hands On Ex06",
    "section": "4.6: Adding Test of Significance to corrgram",
    "text": "4.6: Adding Test of Significance to corrgram\nCompute p-values and confidence intervals using corr.mtest()\n\n\nShow the code\nwine_sig = cor.mtest(wine_cor, conf.level= .95)\n\n\n\n\nShow the code\ncorrplot(wine_cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         # Insert test to graph using this argument\n         p.mat = wine_sig$p,\n         sig.level = .05)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#reordering-a-corrgram",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#reordering-a-corrgram",
    "title": "Hands On Ex06",
    "section": "4.7: Reordering a corrgram",
    "text": "4.7: Reordering a corrgram\n\nCorrplot package supports 4 sorting methods:\n\n“AOE” is for the angular order of the eigenvectors. See Michael Friendly (2002) for details.\n“FPC” for the first principal component order.\n\n“hclust” for hierarchical clustering order, and “hclust.method” for the agglomeration method to be used.”hclust.method” should be one of “ward”, “single”, “complete”, “average”, “mcquitty”, “median” or “centroid”.\n\n“alphabet” for alphabetical order.\n\n\n\nhclustAOE\n\n\n\n\nShow the code\ncorrplot.mixed(wine_cor, \n               lower = \"shade\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               tl.col = \"grey10\",\n               order=\"hclust\",\n               hclust.method = \"ward.D\",\n               addrect = 3)\n\n\n\n\n\n\n\n\n\nShow the code\ncorrplot.mixed(wine_cor, \n               lower = \"shade\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"grey10\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#required-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#required-packages-1",
    "title": "Hands On Ex06",
    "section": "Required Packages",
    "text": "Required Packages\n\npacman::p_load(seriation, dendextend, heatmaply)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-2",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-2",
    "title": "Hands On Ex06",
    "section": "Data",
    "text": "Data\nData used for this study is the World Happiness 2018 Report.\n\n\nShow the code\nwh <- read_csv(\"data/WHData-2018.csv\")\n\n\nRows: 156 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country, Region\ndbl (10): Happiness score, Whisker-high, Whisker-low, Dystopia, GDP per capi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nShow the code\ndatatable(head(wh))\n\n\n\n\n\n\n\nPreparing the data:\n\n# row names should be country\nrow.names(wh) <- wh$Country\n\n# transform dataframe into datamatrix\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#base-r-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#base-r-heatmap",
    "title": "Hands On Ex06",
    "section": "5.1: Base R heatmap()",
    "text": "5.1: Base R heatmap()\nThe arguments Rowv=NA and Colv=NA are used to switch off the option of plotting the row and column dendrograms.\n\n\nShow the code\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv = NA, \n                      Colv = NA)\n\n\n\n\n\nBase R cluster heatmap\n\n\nShow the code\nwh_heatmap <- heatmap(wh_matrix)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#interactive-heatmap-with-heatmaply",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#interactive-heatmap-with-heatmaply",
    "title": "Hands On Ex06",
    "section": "5.2: Interactive Heatmap with heatmaply",
    "text": "5.2: Interactive Heatmap with heatmaply\n\n\nShow the code\nheatmaply(mtcars)\n\n\n\n\n\n\n\n5.2.1: Column and Row Scaling\nWhen variables come from normal distribution, scaling will bring them closer to standard normal distribution\n\n\nShow the code\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\n\n\n5.2.2: Normal Standardisation\nWhen variables in the data comes from possibly different (and non-normal) distributions, the normalize function can be used to bring data to the 0 to 1 scale by subtracting the minimum and dividing by the maximum of all observations.\n\n\nShow the code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands on 5",
    "section": "",
    "text": "Modelling, Visualising and Analysing Network Data with R"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-date-and-time-formats",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-date-and-time-formats",
    "title": "Hands on 5",
    "section": "1.1: Changing Date and Time formats",
    "text": "1.1: Changing Date and Time formats\n\n\ndmy() transforms the SentDate to Date data type.\n\nwday() returns the day of the week as a decimal number or an ordered factor if label is TRUE.\n\n\n\n\nShow the code\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#aggregating-attributes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#aggregating-attributes",
    "title": "Hands on 5",
    "section": "1.2 Aggregating Attributes",
    "text": "1.2 Aggregating Attributes\nGAStech_edges data.frame consists of individual e-mail flow records, which is not very useful for visualisation.\nIn view of this, data will be aggregated by date, senders, receivers, main subject and day of the week.\n\n\nShow the code\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-a-network-graph-dataframe",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-a-network-graph-dataframe",
    "title": "Hands on 5",
    "section": "2.1: Using tbl_graph() to build a network graph dataframe",
    "text": "2.1: Using tbl_graph() to build a network graph dataframe\n\ntbl_graph() creates a tbl_graph network object from nodes and edges data\n\nas_tbl_graph() converts network data and objects to a tbl_graph network\n\n\n\nShow the code\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges.\n\nThe command also prints the first six rows of “Node Data” and the first three of “Edge Data”.It states that the Node Data is active – this makes it possible to manipulate the data in one tibble at a time."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-activate-to-change-the-activate-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-activate-to-change-the-activate-object",
    "title": "Hands on 5",
    "section": "2.2: Using activate() to change the activate object",
    "text": "2.2: Using activate() to change the activate object\nThe nodes tibble data frame is activated by default, but you can change which tibble data frame is active with the activate() function. Thus, if we wanted to rearrange the rows in the edges tibble to list those with the highest “weight” first, we could use activate() and then arrange().\n\n\nShow the code\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#basic-network-graph",
    "title": "Hands on 5",
    "section": "3.1: Basic Network Graph",
    "text": "3.1: Basic Network Graph\n\n\nShow the code\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point() +\n  theme_graph(background = NA)\n\n\n\n\n\nShow the code\nth_foreground(\n  foreground = \"#F8F3E6\", \n  border = FALSE)\n\n\nList of 2\n $ panel.border    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ strip.background:List of 5\n  ..$ fill         : chr \"#F8F3E6\"\n  ..$ colour       : chr \"#F8F3E6\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#playing-with-themes-and-colors",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#playing-with-themes-and-colors",
    "title": "Hands on 5",
    "section": "3.2: Playing with Themes and Colors",
    "text": "3.2: Playing with Themes and Colors\n\n\nShow the code\ng <- ggraph(\n  GAStech_graph\n  ) + \n  geom_edge_link(\n    aes(colour = 'grey50')\n  ) +\n  geom_node_point(\n    aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#playing-with-graph-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#playing-with-graph-layouts",
    "title": "Hands on 5",
    "section": "3.3: Playing with Graph Layouts",
    "text": "3.3: Playing with Graph Layouts\nFruchterman and Reingold layout\n\n\nShow the code\ng <- ggraph(\n  GAStech_graph, \n    layout = \"fr\"\n  ) +\n  geom_edge_link(\n    aes()\n  ) +\n  geom_node_point(\n    aes())\n\ng + theme_graph()\n\n\n\n\n\nAdding color codes to nodes\n\n\nShow the code\ng <- ggraph(\n    GAStech_graph, \n    layout = \"nicely\"\n  ) + \n  geom_edge_link(\n    aes()\n  ) +\n  geom_node_point(\n    aes(colour = Department, \n    size = 3))\n\ng + theme_graph()\n\n\n\n\n\nModifying Edges\n\n\nShow the code\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#facet-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#facet-edges",
    "title": "Hands on 5",
    "section": "4.1: Facet Edges",
    "text": "4.1: Facet Edges\n\n\nShow the code\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#framed-facet-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#framed-facet-graphs",
    "title": "Hands on 5",
    "section": "4.2: Framed Facet Graphs",
    "text": "4.2: Framed Facet Graphs\n\n\nShow the code\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#measuring-centrality",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#measuring-centrality",
    "title": "Hands on 5",
    "section": "6.1: Measuring Centrality",
    "text": "6.1: Measuring Centrality\nCentrality allows us to quantify the relationships within the network. It reports\n* the connectivity of the node within a network, * the complexity of a network, * the clusters or sub-groups within a network.\n\n\nShow the code\ng <- GAStech_graph %>%\n  # Use tidyverse functions for tidygraph\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n          # varying size of nodes by centrality measure            \n            size=betweenness_centrality))\ng \n\n\n\n\n\nNetwork Metrics: Degree Degree refers to the number of direct connections a node has. It is often interpreted in terms of the immediate risk of node for catching whatever is flowing through the network (such as a virus, or some information).\nThis is different from betweenness index, which smeasures the relative “weight” of importance of the node.\nNetwork Metrics: Betweenness centrality Betweenness is a centrality measure of a vertex within a graph. It is a way of detecting the amount of influence a node has over the flow of information in a graph. It is often used to find nodes that serve as a bridge from one part of a graph to another.Vertices that occur on many shortest paths between other vertices have higher betweenness than those that do not.\nNetwork Metrics: In-degree & Out-degree If the network is directed (meaning that ties have direction), then we usually define two separate measures of degree centrality, namely indegree and outdegree. Indegree is a count of the number of ties directed to the node, and outdegree is the number of ties that the node directs to others.\nFor positive relations such as friendship or advice, we normally interpret indegree as a form of popularity, and outdegree as gregariousness."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands on 5",
    "section": "7.1: Data Preparation",
    "text": "7.1: Data Preparation\n\n\nShow the code\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\n\n`summarise()` has grouped output by 'from'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-graph",
    "title": "Hands on 5",
    "section": "7.2: Plotting the Graph",
    "text": "7.2: Plotting the Graph\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#adding-colored-groups",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#adding-colored-groups",
    "title": "Hands on 5",
    "section": "7.3: Adding colored groups",
    "text": "7.3: Adding colored groups\n\n\nShow the code\n#rename categorical color variable from \"Department\" to \"group\"\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\n# Assign colors with vislegend()\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#specifying-curved-edges-with-visedges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#specifying-curved-edges-with-visedges",
    "title": "Hands on 5",
    "section": "7.4: Specifying curved edges with visEdges()",
    "text": "7.4: Specifying curved edges with visEdges()\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#incorporating-interactivity-menu-with-visoptions",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#incorporating-interactivity-menu-with-visoptions",
    "title": "Hands on 5",
    "section": "7.5: Incorporating interactivity menu with visOptions()",
    "text": "7.5: Incorporating interactivity menu with visOptions()\nAdd argument nodesIdSelection = TRUE\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands On 07",
    "section": "",
    "text": "R Packages:\n\n\nShow the code\npacman::p_load(ggHoriPlot, ggthemes, tidyverse)\n\n\nLoading the Data:\n\n\nShow the code\naverp <- read_csv(\"data/AVERP.csv\") %>%\n  mutate(Date = dmy(Date)) %>%\n  rename(Consumer_items = 'Consumer Items')\n\n\nRows: 7452 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Date, Consumer Items\ndbl (1): Values\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-the-horizon-plot",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-the-horizon-plot",
    "title": "Hands On 07",
    "section": "Plotting the Horizon Plot",
    "text": "Plotting the Horizon Plot\n\n\nShow the code\naverp %>% \n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(\n    aes(x = Date, y = Values), \n    origin = \"midpoint\", \n    horizonscale = 6\n  )+\n  facet_grid(Consumer_items~.) +\n  theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  scale_x_date(\n    expand=c(0,0), \n    date_breaks = \"3 month\", \n    date_labels = \"%b%y\"\n  ) +\n  labs(\n    title = \"Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)\"\n  ) +\n  theme(\n    panel.spacing.y = unit(0, \"lines\"), \n    strip.text.y = element_text(size = 5, angle = 0, hjust = 0),\n    legend.position = \"none\",\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size = 7, angle = 90),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    panel.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"),\n    plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands on 08",
    "section": "",
    "text": "Choropleth mapping involves the symbolisation of enumeration units, such as countries, provinces, states, counties or census units, using area patterns or graduated colors. For example, a social scientist may need to use a choropleth map to portray the spatial distribution of aged population of Singapore by Master Plan 2014 Subzone Boundary.\nIn this chapter, we will learn how to plot functional and truthful choropleth maps by using an R package called tmap package. Besides tmap package, four other R packages will be used. They are:\n\nreadr for importing delimited text file,\ntidyr for tidying data,\ndplyr for wrangling data and\nsf for handling geospatial data.\n\nAmong the four packages, readr, tidyr and dplyr are part of tidyverse package. As such, we can just load the tidyverse package. The code chunk below will be used to install and load these packages in RStudio.\n\n\nShow the code\npacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\n\nTwo data sets will be used to create the choropleth map. They are:\n\nMaster Plan 2014 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format. It can be downloaded at data.gov.sg This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. respopagesextod2011to2020.csv). This is an aspatial data fie. It can be downloaded at Department of Statistics, Singapore Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile.\n\n\n\n\nThe code chunk below uses the st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a simple feature data frame called mpsz.\n\n\nShow the code\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\junsok21\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nYou can examine the content of mpsz by using the code chunk below.\n\n\nShow the code\nmpsz\n\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\nNext, we will import respopagsex2011to2020.csv file into RStudio and save the file into an R dataframe called popagsex. The task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\n\nShow the code\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nBefore a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age groyup 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by() and select() of dplyr package\n\n\n\nShow the code\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\n\n\nBefore we can perform the georelational join, one extra step is required to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper- and lowercase. On the other, hand the SUBZONE_N and PLN_AREA_N are in uppercase.\n\n\nShow the code\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\n\nShow the code\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nThing to learn from the code chunk above:\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\n\nShow the code\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\n\n\n\n\n\nTwo approaches can be used to prepare thematic map using tmap, they are:\n\nPlotting a thematic map quickly by using qtm().\nPlotting highly customisable thematic map by using tmap elements.\n\n\n\nThe easiest and quickest to draw a choropleth map using tmap is using qtm(). It is concise and provides a good default visualisation in many cases.\nThe code chunk below will draw a cartographic standard choropleth map as shown below. Things to learn from the code chunk:\n\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)\n\n\n\nShow the code\ntmap_mode(\"plot\")\n\n\ntmap mode set to plotting\n\n\nShow the code\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\nDespite its usefulness of drawing a choropleth map quickly and easily, the disadvantge of qtm() is that it makes aesthetics of individual layers harder to control. To draw a high quality cartographic choropleth map as shown in the figure below, tmap’s drawing elements should be used.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\nThe basic building block of tmap is tm_shape() followed by one or more layer elemments such as tm_fill() and tm_polygons().\nIn the code chunk below, tm_shape() is used to define the input data (i.e mpsz_pop2020) and tm_polygons() is used to draw the planning subzone polygons.\n\n\nShow the code\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as Dependency to tm_polygons().\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\nThings to learn from tm_polygons():\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap will be provided in sub-section 4.3.\nThe default colour scheme used is YlOrRd of ColorBrewer. You will learn more about the color scheme in sub-section 4.4.\nBy default, Missing values will be shaded in grey.\n\n\n\n\nActually, tm_polygons() is a wraper of tm_fill() and tm_border(). tm_fill() shades the polygons by using the default colour scheme and tm_borders() adds the borders of the shapefile onto the choropleth map. The code chunk below draws a choropleth map by using tm_fill() alone.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\nNotice that the planning subzones are shared according to the respective dependecy values. To add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\nNotice that light-gray border lines have been added on the choropleth map! The alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1). Beside alpha argument, there are three other arguments for tm_borders(), they are:\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is “solid”.\n\n\n\n\n\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\ntmap provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\n\nThe code chunk below shows a quantile data classification that used 5 classes.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nNotice that the distribution of quantile data classification method are more evenly distributed then equal data classification methods.\n\n\n\n\n\n\nWarning\n\n\n\nMaps can lie!\n\n\n\n\n\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the tm_fill(). It is important to note that in tmap, the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the breaks option (the values must be in increasing order).\nBefore we get started, it is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\n\nShow the code\nsummary(mpsz_pop2020$DEPENDENCY)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nWith reference to the results above, we set break point at 0.60, 0.70, 0.80, and 0.90. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Our breaks vector is thus c(0, 0.60, 0.70, 0.80, 0.90, 1.00).\nNow, we will plot the choropleth map by using the code chunk below.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\nWarning: Values have found that are higher than the highest break\n\n\n\n\n\n\n\n\n\ntmap supports colour ramps either defined by the user or a set of predefined colour ramps from the RColorBrewer package.\n\n\nTo change the colour, we assign the preferred colour to palette argument of tm_fill() as shown in the code chunk below.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nNotice that the choropleth map is shaded in greens. To reverse the colour shading, add a “-” prefix.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nMap layout refers to the combination of all map elements into a cohesive map. Map elements include the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios, among others. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks.\n\n\nIn tmap, several legend options are provided to change the placement, format and appearance of the legend.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style(). The code chunk below shows the classic style is used.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\n\n\n\nBeside map style, tmap also also provides arguments to draw other map furniture such as compass, scale bar and grid lines.\nIn the code chunk below, tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\nTo reset the default style, you can use the code chunk: tmap_style(\"white\")\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nSmall multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\n\n\nIn this example, small multiple choropleth maps are created by defining ncols in tm_fill():\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments:\n\n\nShow the code\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\nIn this example, multiple small choropleth maps are created by using tm_facets().\n\n\nShow the code\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\n\n\n\nIn this example, multiple small choropleth maps are created by creating multiple stand-alone maps with tmap_arrange().\n\n\nShow the code\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\nInstead of creating small multiple choropleth map, you can also use selection funtion to map spatial objects meeting the selection criterion.\n\n\nShow the code\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend\n\n\n\n\n\n\n\n\n\n\n\n\ntmap: Thematic Maps in R\ntmap\ntmap: get started!\ntmap: changes in version 2.0\ntmap: creating thematic maps in a flexible way (useR!2015)\nExploring and presenting maps with tmap (useR!2017)\n\n\n\n\n\nsf: Simple Features for R\nSimple Features for R: StandardizedSupport for Spatial Vector Data\nReading, Writing and Converting Simple Features\n\n\n\n\n\ndplyr\nTidy data\ntidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#loading-packages",
    "title": "Hands on 08",
    "section": "Loading Packages",
    "text": "Loading Packages\nBefore we get started, we need to ensure that tmap package of R and other related R packages have been installed and loaded into R.\n\n\nShow the code\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling-1",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling-1",
    "title": "Hands on 08",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\n\nThe data\nThe data set use for this hands-on exercise is called SGPools_svy21. The data is in csv file format.\nFigure below shows the first 15 records of SGPools_svy21.csv. It consists of seven columns. The XCOORD and YCOORD columns are the x-coordinates and y-coordinates of SingPools outlets and branches. They are in Singapore SVY21 Projected Coordinates System.\n\n\nData Import and Preparation\nThe code chunk below uses read_csv() function of readr package to import SGPools_svy21.csv into R as a tibble data frame called sgpools.\n\n\nShow the code\nsgpools <- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\n\nRows: 306 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): NAME, ADDRESS, OUTLET TYPE\ndbl (4): POSTCODE, XCOORD, YCOORD, Gp1Gp2 Winnings\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe code chunk below shows list() is used to do the job. Notice that the sgpools data in tibble data frame and not the common R data frame.\n\n\nShow the code\nlist(sgpools) \n\n\n[[1]]\n# A tibble: 306 × 7\n   NAME           ADDRESS POSTCODE XCOORD YCOORD `OUTLET TYPE` `Gp1Gp2 Winnings`\n   <chr>          <chr>      <dbl>  <dbl>  <dbl> <chr>                     <dbl>\n 1 Livewire (Mar… 2 Bayf…    18972 30842. 29599. Branch                        5\n 2 Livewire (Res… 26 Sen…    98138 26704. 26526. Branch                       11\n 3 SportsBuzz (K… Lotus …   738078 20118. 44888. Branch                        0\n 4 SportsBuzz (P… 1 Sele…   188306 29777. 31382. Branch                       44\n 5 Prime Serango… Blk 54…   552542 32239. 39519. Branch                        0\n 6 Singapore Poo… 1A Woo…   731001 21012. 46987. Branch                        3\n 7 Singapore Poo… Blk 64…   370064 33990. 34356. Branch                       17\n 8 Singapore Poo… Blk 88…   370088 33847. 33976. Branch                       16\n 9 Singapore Poo… Blk 30…   540308 33910. 41275. Branch                       21\n10 Singapore Poo… Blk 20…   560202 29246. 38943. Branch                       25\n# ℹ 296 more rows\n\n\n\n\nCreating a sf data frame from an aspatial data frame\nThe code chunk below converts sgpools data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\n\nShow the code\nsgpools_sf <- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\n\nThings to learn from the arguments above:\n\nThe coords argument requires you to provide the column name of the x-coordinates first then followed by the column name of the y-coordinates.\nThe crs argument required you to provide the coordinates system in epsg format. EPSG: 3414 is Singapore SVY21 Projected Coordinate System. You can search for other country’s epsg code by refering to epsg.io.\n\nLook at the data table of sgpools_sf. Notice that a new column called geometry has been added into the data frame.\n\nYou can display the basic information of the newly created sgpools_sf by using the code chunk below. The output shows that sgppols_sf is in point feature class. Its epsg ID is 3414. The bbox provides information of the extend of the geospatial data.\n\n\nShow the code\nlist(sgpools_sf)\n\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * <chr>                        <chr>      <dbl> <chr>                     <dbl>\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry <POINT [m]>"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-proportional-symbol-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-proportional-symbol-map",
    "title": "Hands on 08",
    "section": "Drawing Proportional Symbol Map",
    "text": "Drawing Proportional Symbol Map\nTo create an interactive proportional symbol map in R, the view mode of tmap will be used. The code chunk below will turn on the interactive mode of tmap.\n\n\nShow the code\ntmap_mode(\"view\")\n\n\ntmap mode set to interactive viewing\n\n\n\nIt all started with an interactive point symbol map\nThe code chunks below are used to create an interactive point symbol map.\n\n\nShow the code\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = 1,\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\n\n\nLets make it proportional\nTo draw a proportional symbol map, we need to assign a numerical variable to the size visual attribute. The code chunks below show that the variable Gp1Gp2Winnings is assigned to size visual attribute.\n\n\nShow the code\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = \"Gp1Gp2 Winnings\",\n           border.col = \"black\",\n           border.lwd = 1)\n\n\nLegend for symbol sizes not available in view mode.\n\n\n\n\n\n\n\n\n\nLets give it a different colour\nThe proportional symbol map can be further improved by using the colour visual attribute. In the code chunks below, OUTLET_TYPE variable is used as the colour attribute variable.\n\n\nShow the code\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1)\n\n\nLegend for symbol sizes not available in view mode.\n\n\n\n\n\n\n\n\n\nI have a twin brother :)\nAn impressive and little-know feature of tmap’s view mode is that it also works with faceted plots. The argument sync in tm_facets() can be used in this case to produce multiple maps with synchronised zoom and pan settings.\n\n\nShow the code\ntm_shape(sgpools_sf) +\n  tm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1) +\n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)\n\n\nLegend for symbol sizes not available in view mode.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBefore you end the session, it is wiser to switch tmap’s Viewer back to plot mode by using the code chunk below.\n\n\nShow the code\ntmap_mode(\"plot\")\n\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#references-1",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#references-1",
    "title": "Hands on 08",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#all-about-tmap-package-1",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#all-about-tmap-package-1",
    "title": "Hands on 08",
    "section": "All about tmap package",
    "text": "All about tmap package\n\ntmap: Thematic Maps in R\ntmap\ntmap: get started!\ntmap: changes in version 2.0\ntmap: creating thematic maps in a flexible way (useR!2015)\nExploring and presenting maps with tmap (useR!2017)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling-2",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling-2",
    "title": "Hands on 08",
    "section": "Geospatial data wrangling",
    "text": "Geospatial data wrangling\n\nsf: Simple Features for R\nSimple Features for R: StandardizedSupport for Spatial Vector Data\nReading, Writing and Converting Simple Features"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-wrangling-2",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-wrangling-2",
    "title": "Hands on 08",
    "section": "Data wrangling",
    "text": "Data wrangling\n\ndplyr\nTidy data\ntidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#getting-started",
    "title": "Hands on 08",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and loading packages\n\n\nShow the code\npacman::p_load(sf, tmap, tidyverse)\n\n\n\n\nImporting data\nFor the purpose of this hands-on exercise, a prepared data set called NGA_wp.rds will be used. The data set is a polygon feature data.frame providing information on water point of Nigeria at the LGA level. You can find the data set in the rds sub-direct of the hands-on data folder.\n\n\nShow the code\nNGA_wp <- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#basic-choropleth-mapping",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#basic-choropleth-mapping",
    "title": "Hands on 08",
    "section": "Basic Choropleth Mapping",
    "text": "Basic Choropleth Mapping\n\nVisualising distribution of non-functional water point\nLet’s plot a choropleth map showing the distribution of non-function water point by LGA.\n\n\nShow the code\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water point by LGAs\",\n            legend.outside = FALSE)\n\n\n\n\nShow the code\np2 <- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total  water point by LGAs\",\n            legend.outside = FALSE)\n\n\n\n\nShow the code\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-map-for-rates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-map-for-rates",
    "title": "Hands on 08",
    "section": "Choropleth Map for Rates",
    "text": "Choropleth Map for Rates\nIn much of our readings we have now seen the importance to map rates rather than counts of things, and that is for the simple reason that water points are not equally distributed in space. That means that if we do not account for how many water points are somewhere, we end up mapping total water point size rather than our topic of interest.\n\nDeriving Proportion of Functional Water Points and Non-Functional Water Points\nWe will tabulate the proportion of functional water points and the proportion of non-functional water points in each LGA. In the following code chunk, mutate() from dplyr package is used to derive two fields, namely pct_functional and pct_nonfunctional.\n\n\nShow the code\nNGA_wp <- NGA_wp %>%\n  mutate(pct_functional = wp_functional/total_wp) %>%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\n\n\nPlotting map of rate\nLet’s plot a choropleth map showing the distribution of percentage functional water point by LGA.\n\n\nShow the code\ntm_shape(NGA_wp) +\n  tm_fill(\"pct_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\",\n          legend.hist = TRUE) +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate map of functional water point by LGAs\",\n            legend.outside = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extreme-value-maps",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extreme-value-maps",
    "title": "Hands on 08",
    "section": "Extreme Value Maps",
    "text": "Extreme Value Maps\nExtreme value maps are variations of common choropleth maps where the classification is designed to highlight extreme values at the lower and upper end of the scale, with the goal of identifying outliers. These maps were developed in the spirit of spatializing EDA, i.e., adding spatial features to commonly used approaches in non-spatial EDA (Anselin 1994).\n\nPercentile Map\nThe percentile map is a special type of quantile map with six specific categories: 0-1%,1-10%, 10-50%,50-90%,90-99%, and 99-100%. The corresponding breakpoints can be derived by means of the base R quantile command, passing an explicit vector of cumulative probabilities as c(0,.01,.1,.5,.9,.99,1). Note that the beginning and end points need to be included.\n\nData Preparation\nStep 1: Exclude records with NA by using the code chunk below.\n\n\nShow the code\nNGA_wp <- NGA_wp %>%\n  drop_na()\n\n\nStep 2: Creating customised classification and extracting values\n\n\nShow the code\npercent <- c(0,.01,.1,.5,.9,.99,1)\nvar <- NGA_wp[\"pct_functional\"] %>%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\n\n\n\n\n\nImportant\n\n\n\nWhen variables are extracted from an sf data.frame, the geometry is extracted as well. For mapping and spatial manipulation, this is the expected behavior, but many base R functions cannot deal with the geometry. Specifically, the quantile() gives an error. As a result st_set_geomtry(NULL) is used to drop geomtry field.\n\n\n\n\nWhy write functions?\nWriting a function has three big advantages over using copy-and-paste:\n\nYou can give a function an evocative name that makes your code easier to understand.\nAs requirements change, you only need to update code in one place, instead of many.\nYou eliminate the chance of making incidental mistakes when you copy and paste (i.e. updating a variable name in one place, but not in another).\n\nSource: Chapter 19: Functions of R for Data Science.\n\n\nCreating the get.var function\nFirstly, we will write an R function as shown below to extract a variable (i.e. wp_nonfunctional) as a vector out of an sf data.frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\n\nShow the code\nget.var <- function(vname,df) {\n  v <- df[vname] %>% \n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\n\n\nA percentile mapping function\nNext, we will write a percentile mapping function by using the code chunk below.\n\n\nShow the code\npercentmap <- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent <- c(0,.01,.1,.5,.9,.99,1)\n  var <- get.var(vnam, df)\n  bperc <- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"< 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"> 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}\n\n\n\n\nTest drive the percentile mapping function\nTo run the function, type the code chunk as shown below.\n\n\nShow the code\npercentmap(\"total_wp\", NGA_wp)\n\n\n\n\n\nNote that this is just a bare bones implementation. Additional arguments such as the title, legend positioning just to name a few of them, could be passed to customise various features of the map.\n\n\n\nBox map\nIn essence, a box map is an augmented quartile map, with an additional lower and upper category. When there are lower outliers, then the starting point for the breaks is the minimum value, and the second break is the lower fence. In contrast, when there are no lower outliers, then the starting point for the breaks will be the lower fence, and the second break is the minimum value (there will be no observations that fall in the interval between the lower fence and the minimum value).\n\nDisplaying summary statistics on a choropleth map by using the basic principles of boxplot.\nTo create a box map, a custom breaks specification will be used. However, there is a complication. The break points for the box map vary depending on whether lower or upper outliers are present.\n\n\n\nShow the code\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\n\nCreating the boxbreaks function\nThe code chunk below is an R function that creating break points for a box map.\n\narguments:\n\nv: vector with observations\nmult: multiplier for IQR (default 1.5)\n\nreturns:\n\nbb: vector with 7 break points compute quartile and fences\n\n\n\n\nShow the code\nboxbreaks <- function(v,mult=1.5) {\n  qv <- unname(quantile(v))\n  iqr <- qv[4] - qv[2]\n  upfence <- qv[4] + mult * iqr\n  lofence <- qv[2] - mult * iqr\n  # initialize break points vector\n  bb <- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence < qv[1]) {  # no lower outliers\n    bb[1] <- lofence\n    bb[2] <- floor(qv[1])\n  } else {\n    bb[2] <- lofence\n    bb[1] <- qv[1]\n  }\n  if (upfence > qv[5]) { # no upper outliers\n    bb[7] <- upfence\n    bb[6] <- ceiling(qv[5])\n  } else {\n    bb[6] <- upfence\n    bb[7] <- qv[5]\n  }\n  bb[3:5] <- qv[2:4]\n  return(bb)\n}\n\n\n\n\nCreating the get.var function\nThe code chunk below is an R function to extract a variable as a vector out of an sf data frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\n\nShow the code\nget.var <- function(vname,df) {\n  v <- df[vname] %>% st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\n\n\nTest drive the newly created function\nLet’s test the newly created function!\n\n\nShow the code\nvar <- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0\n\n\n\n\nBoxmap function\nThe code chunk below is an R function to create a box map. The arguments are:\n\nvnam: variable name (as character, in quotes)\ndf: simple features polygon layer\nlegtitle: legend title\nmtitle: map title\nmult: multiplier for IQR\n\nIt will then return a tmap-element (plots a map).\n\n\nShow the code\nboxmap <- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var <- get.var(vnam,df)\n  bb <- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"< 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"> 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\n\n\ntmap mode set to plotting\n\n\nShow the code\nboxmap(\"wp_nonfunctional\", NGA_wp)\n\n\nWarning: Breaks contains positive and negative values. Better is to use\ndiverging scale instead, or set auto.palette.mapping to FALSE."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#record-those-unknwon-orcharactor0-to-na",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#record-those-unknwon-orcharactor0-to-na",
    "title": "Take home Exercise 3",
    "section": "Record those “Unknwon” or”Charactor(0)” to “NA”",
    "text": "Record those “Unknwon” or”Charactor(0)” to “NA”\n\n\nShow the code\nmc3_nodes1$product_services[mc3_nodes1$product_services == \"Unknown\"] <- NA\nmc3_nodes1$product_services[mc3_nodes1$product_services == \"character(0)\"] <- NA\n\n\n\n\n\n\nShow the code\nmc3_nodes_filtered <- mc3_nodes1 %>% \n  mutate(n_fish = str_count(product_services, \"fish\")) %>%\n  arrange(desc(n_fish))\n\n\n\n\nShow the code\nmc3_nodes_filtered\n\n\n# A tibble: 37,324 × 6\n   id                          country type  revenue_omu product_services n_fish\n   <chr>                       <chr>   <chr>       <dbl> <chr>             <int>\n 1 Gvardeysk Sextant ОАО Cargo Uziland Comp…      73027. Fish salads (It…     11\n 2 Taylor LLC                  ZH      Comp…     138982. Fish (anchovy, …     11\n 3 SeaSelect Foods Salt spray  Marebak Comp…      41902. European whole …      7\n 4 Arunachal Pradesh s S.A. d… Marebak Comp…      60346. Offers a wide r…      6\n 5 suō yú Ltd. Liability Co    Coralm… Comp…      31567. Offers a wide r…      6\n 6 Estrella del Mar SE         Riodel… Comp…      12565. Whole fresh fis…      5\n 7 Mar de la Vida S.p.A. Expr… Gavano… Comp…      97490. Fresh and froze…      5\n 8 Moore LLC                   ZH      Comp…      61273. Fish and fish p…      5\n 9 Banded tilapia Corporation… Solova… Comp…      17498. Specialises in …      4\n10 Costa de la Felicidad Ltd   Puerto… Comp…         NA  Diverse range o…      4\n# ℹ 37,314 more rows\n\n\n\n\nShow the code\nggplot(data = mc3_nodes_filtered, aes(x = type, y = n_fish)) +\ngeom_bar(stat = \"identity\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#tokenisation",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#tokenisation",
    "title": "Take home Exercise 3",
    "section": "Tokenisation",
    "text": "Tokenisation\n\n\nShow the code\ntoken_nodes <- mc3_nodes1 %>%\n  unnest_tokens(word, \n                product_services,\n                to_lower = TRUE,\n    # Exclude punctuation from tokenisation result\n                strip_punct = TRUE)\n\n\n\nVisualize the words extracted.\n\n\nShow the code\ntoken_nodes %>%\n  count(word, sort = TRUE) %>%\n  top_n(15) %>%\n  mutate(word = reorder(word, n)) %>%\n  ggplot(aes(x = word, y = n)) +\n  geom_col() +\n  xlab(NULL) +\n  coord_flip() +\n      labs(x = \"Count\",\n      y = \"Unique words\",\n      title = \"Count of unique words found in product_services field\")\n\n\n\n\n\n\n\nShow the code\nstopwords_removed <- token_nodes %>% \n  anti_join(stop_words)\n\n\n\n\nShow the code\nstopwords_removed %>%\n  count(word, sort = TRUE) %>%\n  top_n(15) %>%\n  mutate(word = reorder(word, n)) %>%\n  ggplot(aes(x = word, y = n)) +\n  geom_col() +\n  xlab(NULL) +\n  coord_flip() +\n      labs(x = \"Count\",\n      y = \"Unique words\",\n      title = \"Count of unique words found in product_services field\")\n\n\n\n\n\n\n\nremove the rows with stop words + “NA”\n\n\nShow the code\nstopwords_removed <- token_nodes %>% \n  anti_join(stop_words) %>%\n  filter(!is.na(word)) \n\n\n\n\nShow the code\nstopwords_removed %>%\n  count(word, sort = TRUE) %>%\n  top_n(15) %>%\n  mutate(word = reorder(word, n)) %>%\n  ggplot(aes(x = word, y = n)) +\n  geom_col() +\n  xlab(NULL) +\n  geom_text(aes(label = n), vjust = 0.5, hjust = -0.1, size = 2, color = \"black\")+\n  coord_flip() +\n      labs(x = \"Count\",\n      y = \"Unique words\",\n      title = \"Count of Top 15 unique words found in product_services field\")+\n  theme_minimal() \n\n\n\n\n\n\n\nShow the code\nlength(unique(stopwords_removed$word))\n\n\n[1] 5467\n\n\n\n\nShow the code\nskim(mc3_nodes)\n\n\n\nData summary\n\n\nName\nmc3_nodes\n\n\nNumber of rows\n27622\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nid\n0\n1\n6\n64\n0\n22929\n0\n\n\ncountry\n0\n1\n2\n15\n0\n100\n0\n\n\ntype\n0\n1\n7\n16\n0\n3\n0\n\n\nproduct_services\n0\n1\n4\n1737\n0\n3244\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrevenue_omu\n21515\n0.22\n1822155\n18184433\n3652.23\n7676.36\n16210.68\n48327.66\n310612303\n▇▁▁▁▁\n\n\n\n\n\n\n\nShow the code\nstopwords_removed_unique <- stopwords_removed %>% \n  filter(!is.na(word))\n\n\n\n\nShow the code\nlength(unique(stopwords_removed_unique$word))\n\n\n[1] 5467\n\n\n\n\nShow the code\nstopwords_removed_unique %>%\n  count(word, sort = TRUE) %>%\n  top_n(15) %>%\n  mutate(word = reorder(word, n)) %>%\n  ggplot(aes(x = word, y = n)) +\n  geom_col() +\n  geom_text(aes(label = n), vjust = 0.5, hjust = -0.1, size = 2, color = \"black\")+\n  xlab(NULL) +\n  coord_flip() +\n      labs(x = \"Count\",\n      y = \"Unique words\",\n      title = \"Count of Top 15 unique words found in product_services field\")+\n  theme_minimal() \n\n\n\n\n\n\n\nShow the code\nwords_fishery <- c(\"fish\", \"seafood\", \"frozen\", \"food\", \"fresh\", \"salmon\", \"shrimp\", \"shellfish\", \"sea\", \"squid\", \"water\", \"seafoods\", \"foods\", \"marine\", \"shipment\", \"shipping\", \"pier\", \"carp\", \"cod\", \"herring\", \"lichen\", \"mackerel\", \"pollock\", \"shark\", \"tuna\", \"ocean\", \"oyster\", \"clam\", \"lobster\", \"crab\", \"crustaceans\", \"crustacean\", \"bass\")\n\nmc3_nodes_fishery <- mc3_nodes_unique %>%\n  filter(str_detect(product_services, paste(words_fishery, collapse = \"|\", sep = \"\")) | is.na(product_services))\n\nprint(mc3_nodes_fishery)\n\n\n# A tibble: 1,534 × 5\n   id                                 country type  revenue_omu product_services\n   <chr>                              <chr>   <chr>       <dbl> <chr>           \n 1 Makumba Ltd. Liability Co          Utopor… Comp…   90986413. Car service, ca…\n 2 Harmon, Edwards and Bates          ZH      Comp…   75070435. Discount superm…\n 3 Punjab s Marine conservation       Riodel… Comp…   72167572. Beef, pork, chi…\n 4 Fisher Group                       ZH      Comp…   29981457. Steel (marketin…\n 5 Morales, Young and Taylor          ZH      Comp…   23739782. Processed foods…\n 6 Morgan LLC                         ZH      Comp…   17939781. Animal feed, an…\n 7 Neptune's Harvest LC Transport     Riodel… Comp…    8726579. Frozen whole an…\n 8 Victoria Falls   Limited Liabilit… Rio Is… Comp…    8014806. Domestic and in…\n 9 Caracola del Mar NV Family         Rio Is… Comp…    7085566. Canned, frozen …\n10 The Sea Lion NV Marine biology     Oceanus Comp…    6264744. One- to five-da…\n# ℹ 1,524 more rows"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#match-id-from-nodes-to-source-in-edge",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#match-id-from-nodes-to-source-in-edge",
    "title": "Take home Exercise 3",
    "section": "Match ID from Nodes to Source in Edge",
    "text": "Match ID from Nodes to Source in Edge\n\n\nShow the code\ntargets <- mc3_edges %>%\n  filter(source %in% mc3_nodes_fishery$id) %>%\n  select(target)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#filter-mc_edges-with-the-extracted-targets",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#filter-mc_edges-with-the-extracted-targets",
    "title": "Take home Exercise 3",
    "section": "Filter mc_edges with the extracted targets",
    "text": "Filter mc_edges with the extracted targets\n\n\nShow the code\nmc3_edges_new <- mc3_edges %>%\n  filter(target %in% targets$target)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#targets-that-are-not-selected-from-mc3_edges",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#targets-that-are-not-selected-from-mc3_edges",
    "title": "Take home Exercise 3",
    "section": "Targets that are not selected from mc3_edges",
    "text": "Targets that are not selected from mc3_edges\n\n\nShow the code\nNon_targets <- mc3_edges %>%\n  filter(!target %in% targets$target) %>%\n  distinct(target, .keep_all = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#remove-non_targets-from-node_fishery",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#remove-non_targets-from-node_fishery",
    "title": "Take home Exercise 3",
    "section": "Remove non_targets from Node_fishery",
    "text": "Remove non_targets from Node_fishery\n\n\nShow the code\nmc3_nodes_fishery_new <- mc3_nodes_fishery %>%\n  filter(!mc3_nodes_fishery$id %in% Non_targets$source)\n\n\n\nresult: none of the non-targets are in Node_fishery\n\n\nShow the code\n# maximum length of source is whopping 213, meaning that lot of c(\",) inputs.\nskim(mc3_edges_new)\n\n\n\nData summary\n\n\nName\nmc3_edges_new\n\n\nNumber of rows\n3711\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n7\n213\n0\n1493\n0\n\n\ntarget\n0\n1\n6\n27\n0\n2887\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweights\n0\n1\n1\n0\n1\n1\n1\n1\n1\n▁▁▇▁▁\n\n\n\n\n\n\n\nShow the code\nmc3_edges_new_filtered <- mc3_edges_new %>%\n  filter(startsWith(source, \"c(\"))\n\n#step 2\n\nmc3_edges_new_split <- mc3_edges_new_filtered %>%\n  separate_rows(source, sep = \", \") %>%\n  mutate(source = gsub('^c\\\\(|\"|\\\\)$', '', source))\n\n#remove rows with grouped\n\nmc3_edges_new2 <- mc3_edges_new %>%\n  anti_join(mc3_edges_new_filtered)\n        \n#Add rows in step #2\n\nmc3_edges_new2 <- mc3_edges_new2 %>%\n  bind_rows(mc3_edges_new, mc3_edges_new_split)\n\n#group\n\nmc3_edges_new_groupby <- mc3_edges_new2 %>%\n  group_by(source, target, type) %>%\n  summarize(weight = n()) %>%\n  filter(weight >1) %>%\n  ungroup()\n\n\n\n\nShow the code\n#The maximum length of source looks more reasonable now at 57, suggesting all the multiple values have been dropped. \nskim(mc3_edges_new_groupby)\n\n\n\nData summary\n\n\nName\nmc3_edges_new_groupby\n\n\nNumber of rows\n3703\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n7\n57\n0\n1485\n0\n\n\ntarget\n0\n1\n6\n27\n0\n2887\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweight\n0\n1\n2\n0.09\n2\n2\n2\n2\n5\n▇▁▁▁▁\n\n\n\n\n\n\n\nShow the code\nclass(mc3_edges_new_groupby)\n\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\nShow the code\n#link the latest edges to the nodes\n\nsource_missing <-setdiff(mc3_edges_new_groupby$source, mc3_nodes_fishery_new$id)\n\nsource_missing_df <- tibble(\n  id = source_missing,\n  country = rep(NA_character_, length(source_missing)),\n  type = rep(\"Company\", length(source_missing)),\n  revenue = rep(NA_real_, length(source_missing)),\n  product_services = rep(NA_character_, length(source_missing))\n)\n\ntarget_missing <- setdiff(mc3_edges_new_groupby$target, mc3_nodes_fishery_new$id)\n\ntarget_missing_df <- tibble(\n  id = target_missing,\n  country = rep(NA_character_, length(target_missing)),\n  type = rep(\"Company\", length(target_missing)),\n  revenue = rep(NA_real_, length(target_missing)),\n  product_services = rep(NA_character_, length(target_missing))\n)\n\n\n\n\nShow the code\n#keep only id values from Nodes df also present in the edges df\n\nmc3_nodes_fishery_new_filtered <- mc3_nodes_fishery_new %>%\n  filter(id %in% c(mc3_edges_new_groupby$source, mc3_edges_new_groupby$target))\n\n\n\n\nShow the code\nmc3_nodes_fishery_new_df <- bind_rows(mc3_nodes_fishery_new_filtered, source_missing_df, target_missing_df)\n\n\n\n\nShow the code\nmc3_nodes_fishery_new_df <- mc3_nodes_fishery_new_df %>%\n  mutate(revenue_omu = as.character(revenue_omu))\n\n\n\n\nShow the code\nmc3_nodes_fishery_grouped <- mc3_nodes_fishery_new_df %>%\n  group_by(id) %>%\n  summarize(\n    count = n(),\n    type_1 = ifelse(n() >= 1, type[1], NA),\n    type_2 = ifelse(n() >= 2, type[2], NA),\n    type_3 = ifelse(n() >= 3, type[3], NA),\n    country = ifelse(n() == 1, country, paste(unique(country), collapse = \", \")),\n    revenue_omu = ifelse(n() == 1, revenue_omu, paste(unique(revenue_omu), collapse = \", \")),\n    product_services = ifelse(n() == 1, product_services, paste(unique(product_services), collapse = \", \"))\n  )\n\n\n\n\nShow the code\ntop_products <- mc3_nodes_fishery_grouped %>%\n  count(product_services, sort = TRUE) %>%\n  top_n(10)\n\n# Rename the columns\ntop_products <- top_products %>%\n  rename(Products = product_services, Occurrences = n)\n\n# Print the table\nprint(top_products)\n\n\n# A tibble: 10 × 2\n   Products                                                          Occurrences\n   <chr>                                                                   <int>\n 1 <NA>                                                                     3560\n 2 Fish and seafood products                                                  37\n 3 Seafood products                                                           23\n 4 Canning, processing and manufacturing of seafood and other aquat…          18\n 5 Fish and fish products                                                     15\n 6 Seafood                                                                    11\n 7 Fish and sea food products                                                  9\n 8 Fish and seafoods products                                                  9\n 9 Fresh and frozen seafood                                                    9\n10 Tuna, sword fish, bass, trout, and salmon, as well as offers she…           9\n\n\n\n\nShow the code\nids_fishing <- mc3_nodes_fishery_grouped %>%\n  filter(str_detect(product_services, paste(words_fishery, collapse = \"|\", sep = \"\")) | is.na(product_services)) %>%\n  pull(id)\n\n\n\n\nShow the code\nmc3_edges_fishery <- mc3_edges_new_groupby %>%\n  filter(source %in% ids_fishing)\n\n\n\n\nShow the code\nmc3_nodes_fishery_ <- mc3_nodes_fishery_grouped %>%\n  filter(id %in% c(mc3_edges_fishery$source, mc3_edges_fishery$target))\n\n\n\n\nShow the code\nmc3_fish_graph <- tbl_graph(nodes = mc3_nodes_fishery_,\n                       edges = mc3_edges_fishery,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"nicely\") +\n  scale_edge_width(range = c(0.01, 6)) +\n  geom_node_point(aes(colour = type_1,\n                      size = betweenness_centrality)) +\n  theme_graph() +\n  labs(size = \"Betweenness Centrality\")\n\nmc3_fish_graph \n\n\n\n\n\n\n\ncan see that most of the type is “Company”\n\n\nShow the code\nmc3_edges_fishery_in <- mc3_edges_fishery %>%\n  rename(from = source, to = target)\n\nmc3_nodes_fishery_in <- mc3_nodes_fishery_ %>%\n  rename(group = type_1) \n\n# Create a visNetwork object with nodes and edges\nvisNetwork(nodes = mc3_nodes_fishery_in, edges = mc3_edges_fishery_in) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/data/geospatial/MPSZ-2019.html",
    "title": "Visual Analytics",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#find-company-owners-linked-to-multiple-companies-thats-anomalies.",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#find-company-owners-linked-to-multiple-companies-thats-anomalies.",
    "title": "Take home Exercise 3",
    "section": "Find company owners () linked to multiple companies, that’s anomalies.",
    "text": "Find company owners () linked to multiple companies, that’s anomalies.\n\nexport csv files\n\n\nShow the code\nwrite.csv(mc3_edges_new, file='C:/Users/junso/Downloads/mc3_edges_new.csv')\n\n\n\n\nShow the code\nmc3_edges_new %>%\n  group_by(target) %>%\n  filter(n_distinct(source) > 1) %>%\n  select(target) \n\n\n# A tibble: 1,334 × 1\n# Groups:   target [510]\n   target           \n   <chr>            \n 1 Elizabeth Jones  \n 2 Amanda Robinson  \n 3 Andrew Taylor    \n 4 Brandon Cruz     \n 5 Michael Thompson \n 6 Melissa Martin   \n 7 Christopher Ramos\n 8 Richard Smith    \n 9 Andrew Reed      \n10 Jennifer Williams\n# ℹ 1,324 more rows\n\n\nShow the code\nmc3_edges_new %>%\n  group_by(target) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) %>%\n  select(target, count)\n\n\n# A tibble: 2,887 × 2\n   target           count\n   <chr>            <int>\n 1 Michael Johnson     11\n 2 John Smith          10\n 3 Jennifer Johnson     9\n 4 Brian Smith          8\n 5 Michael Smith        8\n 6 Richard Smith        8\n 7 David Smith          7\n 8 James Brown          7\n 9 James Smith          7\n10 Melissa Brown        7\n# ℹ 2,877 more rows\n\n\n\n\nShow the code\n# maximum length of source is whopping 213, meaning that lot of c(\",) inputs.\nskim(mc3_edges_new)\n\n\n\nData summary\n\n\nName\nmc3_edges_new\n\n\nNumber of rows\n3711\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n7\n213\n0\n1493\n0\n\n\ntarget\n0\n1\n6\n27\n0\n2887\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweights\n0\n1\n1\n0\n1\n1\n1\n1\n1\n▁▁▇▁▁\n\n\n\n\n\n\n\nShow the code\nmc3_edges_new_filtered <- mc3_edges_new %>%\n  filter(startsWith(source, \"c(\"))\n\n#step 2\n\nmc3_edges_new_split <- mc3_edges_new_filtered %>%\n  separate_rows(source, sep = \", \") %>%\n  mutate(source = gsub('^c\\\\(|\"|\\\\)$', '', source))\n\n#remove rows with grouped\n\nmc3_edges_new2 <- mc3_edges_new %>%\n  anti_join(mc3_edges_new_filtered)\n        \n#Add rows in step #2\n\nmc3_edges_new2 <- mc3_edges_new2 %>%\n  bind_rows(mc3_edges_new, mc3_edges_new_split)\n\n#group\n\nmc3_edges_new_groupby <- mc3_edges_new2 %>%\n  group_by(source, target, type) %>%\n  summarize(weight = n()) %>%\n  filter(weight >1) %>%\n  ungroup()\n\n\n\n\nShow the code\n#The maximum length of source looks more reasonable now at 57, suggesting all the multiple values have been dropped. \nskim(mc3_edges_new_groupby)\n\n\n\nData summary\n\n\nName\nmc3_edges_new_groupby\n\n\nNumber of rows\n3703\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n7\n57\n0\n1485\n0\n\n\ntarget\n0\n1\n6\n27\n0\n2887\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweight\n0\n1\n2\n0.09\n2\n2\n2\n2\n5\n▇▁▁▁▁\n\n\n\n\n\n\n\nShow the code\nclass(mc3_edges_new_groupby)\n\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\nShow the code\n#link the latest edges to the nodes\n\nsource_missing <-setdiff(mc3_edges_new_groupby$source, mc3_nodes_fishery_new$id)\n\nsource_missing_df <- tibble(\n  id = source_missing,\n  country = rep(NA_character_, length(source_missing)),\n  type = rep(\"Company\", length(source_missing)),\n  revenue = rep(NA_real_, length(source_missing)),\n  product_services = rep(NA_character_, length(source_missing))\n)\n\ntarget_missing <- setdiff(mc3_edges_new_groupby$target, mc3_nodes_fishery_new$id)\n\ntarget_missing_df <- tibble(\n  id = target_missing,\n  country = rep(NA_character_, length(target_missing)),\n  type = rep(\"Company\", length(target_missing)),\n  revenue = rep(NA_real_, length(target_missing)),\n  product_services = rep(NA_character_, length(target_missing))\n)\n\n\n\n\nShow the code\n#keep only id values from Nodes df also present in the edges df\n\nmc3_nodes_fishery_new_filtered <- mc3_nodes_fishery_new %>%\n  filter(id %in% c(mc3_edges_new_groupby$source, mc3_edges_new_groupby$target))\n\n\n\n\nShow the code\nmc3_nodes_fishery_new_df <- bind_rows(mc3_nodes_fishery_new_filtered, source_missing_df, target_missing_df)\n\n\n\n\nShow the code\nmc3_nodes_fishery_new_df <- mc3_nodes_fishery_new_df %>%\n  mutate(revenue_omu = as.character(revenue_omu))\n\n\n\n\nShow the code\nmc3_nodes_fishery_grouped <- mc3_nodes_fishery_new_df %>%\n  group_by(id) %>%\n  summarize(\n    count = n(),\n    type_1 = ifelse(n() >= 1, type[1], NA),\n    type_2 = ifelse(n() >= 2, type[2], NA),\n    type_3 = ifelse(n() >= 3, type[3], NA),\n    country = ifelse(n() == 1, country, paste(unique(country), collapse = \", \")),\n    revenue_omu = ifelse(n() == 1, revenue_omu, paste(unique(revenue_omu), collapse = \", \")),\n    product_services = ifelse(n() == 1, product_services, paste(unique(product_services), collapse = \", \"))\n  )\n\n\n\n\nShow the code\ntop_products <- mc3_nodes_fishery_grouped %>%\n  count(product_services, sort = TRUE) %>%\n  top_n(10)\n\n# Rename the columns\ntop_products <- top_products %>%\n  rename(Products = product_services, Occurrences = n)\n\n# Print the table\nprint(top_products)\n\n\n# A tibble: 10 × 2\n   Products                                                          Occurrences\n   <chr>                                                                   <int>\n 1 <NA>                                                                     3560\n 2 Fish and seafood products                                                  37\n 3 Seafood products                                                           23\n 4 Canning, processing and manufacturing of seafood and other aquat…          18\n 5 Fish and fish products                                                     15\n 6 Seafood                                                                    11\n 7 Fish and sea food products                                                  9\n 8 Fish and seafoods products                                                  9\n 9 Fresh and frozen seafood                                                    9\n10 Tuna, sword fish, bass, trout, and salmon, as well as offers she…           9\n\n\n\n\nShow the code\nprint(\"Shaun\")\n\n\n[1] \"Shaun\""
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#find-company-personnal-names-linked-to-multiple-companies-thats-anomalies.",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#find-company-personnal-names-linked-to-multiple-companies-thats-anomalies.",
    "title": "Take home Exercise 3",
    "section": "Find company personnal names () linked to multiple companies, that’s anomalies.",
    "text": "Find company personnal names () linked to multiple companies, that’s anomalies.\n\nexport csv files\n\n\nShow the code\nmc3_edges_fishery %>%\n  group_by(target) %>%\n  filter(n_distinct(source) > 1) %>%\n  select(target) \n\n\n# A tibble: 1,324 × 1\n# Groups:   target [508]\n   target           \n   <chr>            \n 1 Elizabeth Jones  \n 2 Michael Morrison \n 3 Amanda Robinson  \n 4 Andrew Taylor    \n 5 Brandon Cruz     \n 6 Michael Thompson \n 7 Melissa Martin   \n 8 Christopher Ramos\n 9 Richard Smith    \n10 Andrew Reed      \n# ℹ 1,314 more rows\n\n\nShow the code\nmc3_edges_fishery %>%\n  group_by(target) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) %>%\n  select(target, count)\n\n\n# A tibble: 2,887 × 2\n   target           count\n   <chr>            <int>\n 1 Michael Johnson     11\n 2 John Smith          10\n 3 Brian Smith          8\n 4 Jennifer Johnson     8\n 5 Michael Smith        8\n 6 Richard Smith        8\n 7 David Smith          7\n 8 James Brown          7\n 9 James Smith          7\n10 Melissa Brown        7\n# ℹ 2,877 more rows\n\n\n\n\nShow the code\nwrite.csv(mc3_edges_fishery, file='C:/Users/junso/Downloads/mc3_edges_fishery.csv')\n\n\n\n\nShow the code\nfiltered_data <- mc3_edges_fishery %>%\n  group_by(target) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) %>%\n  select(target, count)\n\nfiltered_data %>% \n  group_by(count) %>% \n  summarise(n = n()) %>% \n  mutate(percentage = round(n/sum(n) * 100, 2)) %>% \n  ggplot(aes(x = count, y = n, label = paste0(round(percentage, 2), \"%\"))) + \n  geom_bar(stat = \"identity\", fill = \"lightblue\", color = \"black\") + \n  xlab(\"Count\") + \n  ylab(\"n\") + \n  scale_x_continuous(breaks = unique(filtered_data$count)) + \n  geom_text(position = position_stack(vjust = 0.5))\n\n\n\n\n\n\n\nShow the code\nfiltered_data2 <- mc3_edges_fishery %>%\n  group_by(target) %>%\n  summarise(count = n()) %>%\n  filter(count > 1) %>%\n  arrange(desc(count)) %>%\n  select(target, count)\n\nfiltered_data2 %>%\n  group_by(count) %>% \n  summarise(n = n()) %>% \n  mutate(percentage = round(n/sum(n) * 100, 2)) %>% \n  ggplot(aes(x = count, y = n, label = paste0(round(percentage, 2), \"%\"))) + \n  geom_bar(stat = \"identity\", fill = \"lightblue\", color = \"black\") + \n  xlab(\"Count\") + \n  ylab(\"n\") + \n  scale_x_continuous(breaks = unique(filtered_data$count)) + \n  geom_text(position = position_stack(vjust = 0.5))\n\n\n\n\n\n\n\nShow the code\nMichael_Johnson <- unique(mc3_edges_fishery_in$from[mc3_edges_fishery_in$to == \"Michael Johnson\"])\n\nMichael_Johnson_edges <- subset(mc3_edges_fishery_in, from %in% Michael_Johnson)\n\nMichael_Johnson_nodes <- subset(mc3_nodes_fishery_, id %in% c(Michael_Johnson_edges$from, Michael_Johnson_edges$to))\n\n\n\n\nShow the code\n# Create a visNetwork\nvisNetwork(nodes = Michael_Johnson_nodes, edges = Michael_Johnson_edges) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\nShow the code\ntop5 <- mc3_edges_fishery_in$from[mc3_edges_fishery_in$to %in% c(\"Michael Johnson\", \"John Smith\", \"Brian Smith\", \"Jennifer Johnson\", \"Michael Smith\")]\n\n\n\n\nShow the code\ntop5_edges <- subset(mc3_edges_fishery_in, from %in% top5)\n\ntop5_nodes <- subset(mc3_nodes_fishery_, id %in% c(top5_edges$from, top5_edges$to))\n\n\n\n\nShow the code\n# Create a visNetwork\nvisNetwork(nodes = top5_nodes, edges = top5_edges) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#conclusion",
    "title": "Take home Exercise 3",
    "section": "Conclusion",
    "text": "Conclusion\nThrough data exploration, I was able to observe a few anomalies.\n\nindividuals who have ownership in multiple companies. From analyzing three sub-network graphs, it was observed that these individuals tend to own a combination of large and small firms from various countries. While there is a possibility that everything is legitimate, it would be beneficial for FishEye to conduct a more thorough examination of these individuals who own companies across borders, particularly when they are the sole owners of smaller entities, as exemplified in the case of ‘James Brown’.\nAll of the id type is “Company”, surprisingly no beneficial owners and company contacts. Sort of expected looking from the distribution of types for Node dataframe intiially, but it might be noteworthy to investigate further what id type mean for illegal fishery."
  }
]