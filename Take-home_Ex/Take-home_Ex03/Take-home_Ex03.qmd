---
title: "Take home Exercise 3"
subtitle: "Take home 3 - question 1"
author: "Junseok Kim"
date: June 17 2023
date-format: medium
execute:
  warning: false
  error: false
  message: false
format:
  html:
    page-layout: full
    toc: true
    smooth-scroll: true
    code-fold: true
    code-summary: "Show the code"
    code-block-border-left: "#63B9A1"
    code-block-bg: "#f2f5f9"
    code-copy: hover
    title-block-banner: true
    fig-align: center
    reader-mode: true
---

```{r}
pacman::p_load(jsonlite, tidygraph, ggraph, 
               visNetwork, graphlayouts, ggforce, 
               skimr, tidytext, tidyverse, ggplot2, skimr, tm)
```

```{r}
mc3_data <- fromJSON("data/MC3.json")
```

```{r}
mc3_edges <- as_tibble(mc3_data$links) %>% 
  distinct() %>%
  mutate(source = as.character(source),
         target = as.character(target),
         type = as.character(type)) %>%
  group_by(source, target, type) %>%
    summarise(weights = n()) %>%
  filter(source!=target) %>%
  ungroup()
```

###Check missing values

```{r}
colSums(is.na(mc3_edges))
```

### Check dupes

```{r}
mc3_edges[duplicated(mc3_edges),]
```

```{r}
mc3_nodes <- as_tibble(mc3_data$nodes) %>%
  mutate(country = as.character(country),
         id = as.character(id),
         product_services = as.character(product_services),
         revenue_omu = as.numeric(as.character(revenue_omu)),
         type = as.character(type)) %>%
  select(id, country, type, revenue_omu, product_services)
```

```{r}
mc3_nodes
```

### CHeck missing value

```{r}
colSums(is.na(mc3_nodes))
```

21515 missing from revenue_omu column

### Check Dupes

```{r}
mc3_nodes[duplicated(mc3_nodes),]
```

### There are 2595 dupe entries

### remove dupliated rows.

```{r}
mc3_nodes_unique <- distinct(mc3_nodes)

mc3_nodes_unique
```

```{r}

top_products <- mc3_nodes_unique %>%
  count(product_services, sort = TRUE) %>%
  top_n(10)

# Rename the columns
top_products <- top_products %>%
  rename(Products = product_services, Occurrences = n)

# Print the table
print(top_products)
```
```





```{r}
skim(mc3_edges)
```


```{r}
```{r}
DT::datatable(mc3_edges)
```


```{r}

ggplot(data = mc3_edges,
       aes(x = type)) +
  geom_bar()
```




```{r}

id1 <- mc3_edges %>%
  select(source) %>%
  rename(id = source)
id2 <- mc3_edges %>%
  select(target) %>%
  rename(id = target)
mc3_nodes1 <- rbind(id1, id2) %>%
  distinct() %>%
  left_join(mc3_nodes,
            unmatched = "drop")
```




```{r}

mc3_graph <- tbl_graph(nodes = mc3_nodes1,
                       edges = mc3_edges,
                       directed = FALSE) %>%
  mutate(betweenness_centrality = centrality_betweenness(),
         closeness_centrality = centrality_closeness())
```






```{r}

mc3_graph %>%
  filter(betweenness_centrality >= 100000) %>%
ggraph(layout = "fr") +
  geom_edge_link(aes(alpha=0.5)) +
  geom_node_point(aes(
    linewidth = betweenness_centrality,
    colors = "lightblue",
    alpha = 0.5)) +
  scale_linewidth_continuous(range=c(1,10))+
  theme_graph() +
  theme(text = element_text(family = "sans"))
```

```{r}

skim(mc3_nodes1)
```


```{r}

DT::datatable(mc3_nodes1)
```

```{r}

ggplot(data = mc3_nodes1,
       aes(x = type)) +
  geom_bar()
```

##Text Sensing with tidytext

```{r}

#mc3_nodes1 %>% 
 #   mutate(n_fish = str_count(product_services, "fish") 
```



## Record those "Unknwon" or"Charactor(0)" to "NA"

```{r}

mc3_nodes1$product_services[mc3_nodes1$product_services == "Unknown"] <- NA
mc3_nodes1$product_services[mc3_nodes1$product_services == "character(0)"] <- NA
```

### 

```{r}

mc3_nodes_filtered <- mc3_nodes1 %>% 
  mutate(n_fish = str_count(product_services, "fish")) %>%
  arrange(desc(n_fish))
```

```{r}

mc3_nodes_filtered
```

```{r}

ggplot(data = mc3_nodes_filtered, aes(x = type, y = n_fish)) +
geom_bar(stat = "identity")
```

## Tokenisation


```{r}

token_nodes <- mc3_nodes1 %>%
  unnest_tokens(word, 
                product_services,
                to_lower = TRUE,
    # Exclude punctuation from tokenisation result
                strip_punct = TRUE)
```

### Visualize the words extracted.

```{r}
token_nodes %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip() +
      labs(x = "Count",
      y = "Unique words",
      title = "Count of unique words found in product_services field")
```


```{r}

stopwords_removed <- token_nodes %>% 
  anti_join(stop_words)
```

```{r}
stopwords_removed %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip() +
      labs(x = "Count",
      y = "Unique words",
      title = "Count of unique words found in product_services field")
```

### remove the rows with stop words + "NA"


```{r}
stopwords_removed <- token_nodes %>% 
  anti_join(stop_words) %>%
  filter(!is.na(word)) 
```


```{r}
stopwords_removed %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  geom_text(aes(label = n), vjust = 0.5, hjust = -0.1, size = 2, color = "black")+
  coord_flip() +
      labs(x = "Count",
      y = "Unique words",
      title = "Count of Top 15 unique words found in product_services field")+
  theme_minimal() 

```

```{r}
length(unique(stopwords_removed$word))
```

```{r}
skim(mc3_nodes)
```

```{r}
stopwords_removed_unique <- stopwords_removed %>% 
  filter(!is.na(word))
```


```{r}
length(unique(stopwords_removed_unique$word))
```

```{r}
stopwords_removed_unique %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  geom_text(aes(label = n), vjust = 0.5, hjust = -0.1, size = 2, color = "black")+
  xlab(NULL) +
  coord_flip() +
      labs(x = "Count",
      y = "Unique words",
      title = "Count of Top 15 unique words found in product_services field")+
  theme_minimal() 

```




```{r}
words_fishery <- c("fish", "seafood", "frozen", "food", "fresh", "salmon", "shrimp", "shellfish", "sea", "squid", "water", "seafoods", "foods", "marine", "shipment", "shipping", "pier", "carp", "cod", "herring", "lichen", "mackerel", "pollock", "shark", "tuna", "ocean", "oyster", "clam", "lobster", "crab", "crustaceans", "crustacean", "bass")

mc3_nodes_fishery <- mc3_nodes_unique %>%
  filter(str_detect(product_services, paste(words_fishery, collapse = "|", sep = "")) | is.na(product_services))

print(mc3_nodes_fishery)
```


## Match ID from Nodes to Source in Edge


```{r}
targets <- mc3_edges %>%
  filter(source %in% mc3_nodes_fishery$id) %>%
  select(target)
```


## Filter mc_edges with  the extracted targets

```{r}
mc3_edges_new <- mc3_edges %>%
  filter(target %in% targets$target)
```

## Targets that are not selected from mc3_edges

```{r}
Non_targets <- mc3_edges %>%
  filter(!target %in% targets$target) %>%
  distinct(target, .keep_all = TRUE)
```

  
## Remove non_targets from Node_fishery

```{r}
mc3_nodes_fishery_new <- mc3_nodes_fishery %>%
  filter(!mc3_nodes_fishery$id %in% Non_targets$source)
```

### result: none of the non-targets are in Node_fishery


## Find company owners () linked to multiple companies, that's anomalies. 

### export csv files 

```{r}
write.csv(mc3_edges_new, file='C:/Users/junso/Downloads/mc3_edges_new.csv')

```


```{r}
mc3_edges_new %>%
  group_by(target) %>%
  filter(n_distinct(source) > 1) %>%
  select(target) 

mc3_edges_new %>%
  group_by(target) %>%
  summarise(count = n()) %>%
  arrange(desc(count)) %>%
  select(target, count)
```

```{r}

# maximum length of source is whopping 213, meaning that lot of c(",) inputs.
skim(mc3_edges_new)
```



```{r}
mc3_edges_new_filtered <- mc3_edges_new %>%
  filter(startsWith(source, "c("))

#step 2

mc3_edges_new_split <- mc3_edges_new_filtered %>%
  separate_rows(source, sep = ", ") %>%
  mutate(source = gsub('^c\\(|"|\\)$', '', source))

#remove rows with grouped

mc3_edges_new2 <- mc3_edges_new %>%
  anti_join(mc3_edges_new_filtered)
        
#Add rows in step #2

mc3_edges_new2 <- mc3_edges_new2 %>%
  bind_rows(mc3_edges_new, mc3_edges_new_split)

#group

mc3_edges_new_groupby <- mc3_edges_new2 %>%
  group_by(source, target, type) %>%
  summarize(weight = n()) %>%
  filter(weight >1) %>%
  ungroup()
```
```{r}
#The maximum length of source looks more reasonable now at 57, suggesting all the multiple values have been dropped. 
skim(mc3_edges_new_groupby)
```

```{r}
class(mc3_edges_new_groupby)
```


```{r}
#link the latest edges to the nodes

source_missing <-setdiff(mc3_edges_new_groupby$source, mc3_nodes_fishery_new$id)

source_missing_df <- tibble(
  id = source_missing,
  country = rep(NA_character_, length(source_missing)),
  type = rep("Company", length(source_missing)),
  revenue = rep(NA_real_, length(source_missing)),
  product_services = rep(NA_character_, length(source_missing))
)

target_missing <- setdiff(mc3_edges_new_groupby$target, mc3_nodes_fishery_new$id)

target_missing_df <- tibble(
  id = target_missing,
  country = rep(NA_character_, length(target_missing)),
  type = rep("Company", length(target_missing)),
  revenue = rep(NA_real_, length(target_missing)),
  product_services = rep(NA_character_, length(target_missing))
)

```


```{r}

#keep only id values from Nodes df also present in the edges df

mc3_nodes_fishery_new_filtered <- mc3_nodes_fishery_new %>%
  filter(id %in% c(mc3_edges_new_groupby$source, mc3_edges_new_groupby$target))
```


```{r}
mc3_nodes_fishery_new_df <- bind_rows(mc3_nodes_fishery_new_filtered, source_missing_df, target_missing_df)
```


```{r}
mc3_nodes_fishery_new_df <- mc3_nodes_fishery_new_df %>%
  mutate(revenue_omu = as.character(revenue_omu))
```


```{r}
mc3_nodes_fishery_grouped <- mc3_nodes_fishery_new_df %>%
  group_by(id) %>%
  summarize(
    count = n(),
    type_1 = ifelse(n() >= 1, type[1], NA),
    type_2 = ifelse(n() >= 2, type[2], NA),
    type_3 = ifelse(n() >= 3, type[3], NA),
    country = ifelse(n() == 1, country, paste(unique(country), collapse = ", ")),
    revenue_omu = ifelse(n() == 1, revenue_omu, paste(unique(revenue_omu), collapse = ", ")),
    product_services = ifelse(n() == 1, product_services, paste(unique(product_services), collapse = ", "))
  )
```



```{r}

top_products <- mc3_nodes_fishery_grouped %>%
  count(product_services, sort = TRUE) %>%
  top_n(10)

# Rename the columns
top_products <- top_products %>%
  rename(Products = product_services, Occurrences = n)

# Print the table
print(top_products)
```


```{r}
print("Shaun")
```


