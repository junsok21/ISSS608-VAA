---
title: "Take Home Exercise 1"
subtitle: "Uncover the relationships between Educations, Savings, and Joviality to Re-boost the City"
author: "Junseok Kim"
date: 5 February 2023
date-format: medium
execute:
  warning: false
  error: false
  message: false
format:
  html:
    page-layout: full
    toc: true
    smooth-scroll: true
    code-fold: true
    code-summary: "Show the code"
    code-block-border-left: "#63B9A1"
    code-block-bg: "#f2f5f9"
    code-copy: hover
    title-block-banner: true
    fig-align: center
    reader-mode: true
---

## 1. Overview

In this exercise, I have attempted uncovering relationships between Educations, Savings, and Joviality to re-vitalize the City

## 2. Load R Packages & Data

### 2.1 Load R Packages

Some required libraries include:

-   <b>ggiraph, plotly</b>: To create interactive visualization
-   <b>ggstatsplot</b>: To generate graphics with details from statistical tests
-   <b>tidyverse</b>: A suite of data tidying up and visualization packages such as tidyr, ggplot2, knitr and so on

```{r}
pacman:: p_load(ggplot2, ggiraph, ggridges, ggthemes, colorspace, ggstatsplot, rstatix, gt, patchwork, tidyverse, patchwork, ggdist, png, gganimate, dplyr, skimr, knitr, rstatix, gt, plotly, DT, scales)
```

### 2.2 Load the Data

```{r}
Parts <- read_csv("data/Participants.csv")
```

```{r}
Fin <- read_csv("data/FinancialJournal.csv")
```

## 3. Preparation Steps

### 3.1 Make EducationLevel, interestGroup, category, and Household Size as Factors

```{r}
#| code-fold: true
#| code-summary: "Show code"

Parts <- Parts %>%
  mutate(educationLevel = as.factor(educationLevel))

Parts <- Parts %>%
  mutate(householdSize = as.factor(householdSize))

Parts <- Parts %>%
  mutate(interestGroup = as.factor(interestGroup))

Parts <- Parts %>%
  mutate(participantId = as.integer(participantId))

Fin <- Fin %>%
  mutate(category = as.factor(category))
```

### 3.2 DateTime transformation

```{r}
#| code-fold: true
#| code-summary: "Show code"

Fin$Month_Yr <- format(as.Date(Fin$timestamp), "%Y-%m")
```

### 3.3 Pivot Columns

```{r}
#| code-fold: true
#| code-summary: "Show code"

Fin_Final <- Fin %>%
  group_by(participantId, category) %>%
  summarise(amount = sum(amount)) %>%
  pivot_wider(names_from = category, values_from = amount)
  
```

### 3.4 Change NA to 0

```{r}
#| code-fold: true
#| code-summary: "Show code"

Fin_Final[is.na(Fin_Final)] <- 0
```

### 3.5 Add new columns Cost_of_living, Total_Income, and Total_Savings

```{r}
#| code-fold: true
#| code-summary: "Show code"

Fin_Final <- Fin_Final %>%
   mutate(Cost_of_living = Education + Food + Recreation + Shelter)

Fin_Final <- Fin_Final %>%
   mutate(Total_Income = Wage + RentAdjustment)

Fin_Final <- Fin_Final %>%
   mutate(Total_Savings = Cost_of_living + Total_Income)

```

### 3.6 Combine the two tables together

```{r}
#| code-fold: true
#| code-summary: "Show code"

combined_table <- merge(Parts, Fin_Final, by = "participantId")
```

### 3.7 View the table snippet using kable function

```{r}
#| code-fold: true
#| code-summary: "Show code"

kable(head(combined_table), "simple")
```


### 3.8 Export file for review

```{r}
write.csv(combined_table, "combined_table.csv", row.names = FALSE)
```

## 4. Normality Test

### 4.1 QQ Plot

```{r}
#| code-fold: true
#| code-summary: "Show code"

ggplot(combined_table,
       aes(sample=Total_Savings))+
       labs(x = "x", y = "Total Savings"
       ) +
  stat_qq() +
  stat_qq_line()
```

### 4.2 Non-Paramatric Test result

::: callout-note
Based on the result below (the p value and the fact that the points are not aligned well with the stright line), we are unable to confirm normality assumption on the Total_Savings distribution. Therefore, non-parametric test will be used for hypthesis testing. Note that the null hypothesis is no difference between Total_Savings between different education levels
:::



```{r}
#| code-fold: true
#| code-summary: "Show code"

qq <- ggplot(combined_table,
             aes(sample=Total_Savings)) +
         labs(x = "x", y = "Total Savings"
       ) +
  stat_qq() +
  stat_qq_line()

sw_t <- combined_table %>%
  shapiro_test(Total_Savings) %>%
  gt()

tmp <- tempfile(fileext = '.png')
gtsave(sw_t, tmp)
table_png <- png::readPNG(tmp, native = TRUE)

qq + table_png
```

## 5. Exploratory Analysis & Insights

### 5.1.1 Create a Box Plot for median of Total_Savings by Education Level


::: callout-note
Median was used instead of mean, because i could not get a chance to filter out the outliers due to time constraints.
:::

```{r}

# Create a boxplot
ggplot(combined_table, aes(x= reorder(educationLevel, -Total_Savings, FUN = median), y=Total_Savings)) +
  geom_boxplot() +
  labs(title = "Boxplot of Total_Savings by Education Level",
       x = "Education Level", y = "Total Savings")
```


::: callout-tip
Note the education level has been ordered in Descending order, based on Total Savings
:::

### 5.1.2 ANOVA test

```{r}
# Perform non-parametric ANOVA test
kruskal.test(Total_Savings ~ educationLevel, data = combined_table)

```


::: callout-note
Looking at the test's p value, we reject the null hypothesis that there's no significant difference in Total Savings based on educationLevel. There is a significant difference in Total Savings depending on education level.
:::

### 5.2 Plot Uncertanties in Median Total Savings by Education Level

```{r}

ggplot(data = combined_table, aes(x = reorder(educationLevel, -Total_Savings, FUN = median), y = Total_Savings)) +
  stat_pointinterval(width = 0.95, point_estimate = "median", interval = "qi", point_color = "red")+
  labs(title = "Visualising Uncertainty in median estimates of Total_Savings by Education Level", 
       subtitle = "Quantiles intervals (95% and 99%) of Total_Savings by Education level",
       x = "Education Level", y = "Total Savings")+
  theme(plot.title = element_text(hjust = 0.5))
```


::: callout-note
Graduates and Bachelors face higher uncertainties, due to presence of outliers. Limitation of distributions along the vertical axis: there are only one point and two error bars for each educationLevel, This doesn't tell us much about distribution of data points at each Saving level. Hence, we try plotting jittered plot in combination with violin plot.
:::


### 5.2.1 Jittered + Violin plots 

#### Looks much more informative now! The gap in Total Savings between Bachelors and Graduate degrees are not that significant. But these groups have bigger difference compared to the lower education groups. 

```{r}
 # Create a jittered plot
ggplot(combined_table, aes(x = educationLevel, y = Total_Savings)) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  geom_violin(fill = "lightgray", alpha =0.2) +
  labs(x = "Education Level", y = "Total Savings")
```


### 5.3 Ridge Plot EDA between Joviality and Interest group

```{r}
ggplot(combined_table, 
       aes(x = joviality, 
           y = interestGroup)) +
  geom_density_ridges(
    scale = 2, alpha = 0.5) +
  scale_x_continuous(
    name = "Joviality",
    limits = c(0, 1)
  ) +
  scale_y_discrete(name = "Interest_Group", expand = expansion(add = c(0.2, 2.6))) +
  theme_ridges()
```


::: callout-note
interestGroup A, B, F, and H have semi-obvious declining pattern in joviality range especially in 0.50-1.00. I suggest the city authority pay extra attention to make these people happier - to turn them around in an effort to revitalize the city.
:::

## 6 Interactive Plots: Does Savings Matter for Joviality?

### 6.1 Basic interactive scatter plot: Plot_ly() method

```{r}
plot_ly(data = combined_table,
              x = ~Total_Savings,
              y = ~joviality,
              color = ~educationLevel)
```


::: callout-note
Interestingly, there is no apparent linear relationship between household savings and joviality. However, people with higher household savings tend to have lower joviality in general. I recommend the city council to take some measure for mental health of these people so these families can stay in the city longer. 
:::

::: callout-note
The above plot is a bit hard to read as many points are aggregated together, especially for lower Savings group, Hence, I decided to make the chart more interactive by adding a drop down menu to select the educationLevel.
:::

### 6.2 Interactive Plot with Drop Down Menu

```{r}

#Annotation variable for the dropdown menu defined.
annot <- list(list(text = "Education Level:",
                   x = 1.3,
                   y = 0.7,
                   xref = 'paper',
                   yref = 'paper',
                   showarrow = FALSE))

# Define the button options
button_options <- list(
  list(label = "Graduate", method = "update", args = list(list(visible = c(FALSE, TRUE, FALSE, FALSE)))),
  list(label = "Bachelor's", method = "update", args = list(list(visible = c(TRUE, FALSE, FALSE, FALSE)))),
  list(label = "HighSchoolOrColleage", method = "update", args = list(list(visible = c(FALSE, FALSE, TRUE, FALSE)))),
  list(label = "LowerThan HighSchool", method = "update", args = list(list(visible = c(FALSE, FALSE, FALSE, TRUE))))
)

# Create the plot_ly plot with dropdown menu
plot_ly(data = combined_table,
        x = ~Total_Savings,
        y = ~joviality,
        color = ~educationLevel,
        type = "scatter",
        mode = "markers",
        marker = list(size = 10)) %>%
  layout(
    updatemenus = list(
      list(type = "dropdown",
           x = 1.3, y = 0.65,
           buttons = button_options)
    ),
    annotations = annot
  )
```

::: callout-note
Education level matters for household savings. Generally the higher the education level is, the higher the household saving is.

:::

### 6.3 Median Joviality Analysis by Savings Group

::: callout-note
For further analysis, I have binned the Savings amount into 6 groups, and found out median joviality of each group.
Interestingly, the higher the saving-the lower the joviality relationship is more apparent.
:::


```{r}

interval <- c(0, 20000, 40000, 60000, 80000, 100000, Inf)

combined_table$Savings_group <- cut(combined_table$Total_Savings, breaks = interval, right = FALSE)

levels(combined_table$Savings_group) <- c("0-20K", "20-40K", "40-60K", "60-80K", "80-100K", "100K+" )

                                      
med_joviality <- aggregate(joviality ~ Savings_group, data=combined_table, FUN = median) 

plot_ly(med_joviality, 
              x = ~Savings_group,
              y = ~joviality, type = "scatter", mode = "markers") %>%
  layout(
    title = "Median Joviality by Savings Group",
    xaxis = list(
      title = "Savings Group"
    )
  )

```



## 7 Summary


::: callout-note
Insight 1: The presence of outliers makes the uncertainty higher for graduates and bachelors, and the limited information in the original plot was improved by using a jittered and violin plot.
:::

::: callout-note
Insight 2: There is a semi-obvious declining pattern in joviality for interest groups A, B, F, and H between joviality 0.50-1.00, suggesting that the city authority should pay allocate budgets to improving happiness in these groups for their wellbeing.
:::

::: callout-note
Insight 3: there is no clear linear relationship between household savings and joviality, but individuals with higher household savings tend to have lower joviality overall. This suggests that mental health support may be beneficial for these individuals. The city council can consider providing resources for mental health services and support groups.
:::
