---
title: "Take home Exercise 2"
subtitle: "Take home 2 - question 4"
author: "Junseok Kim"
date: June 4 2023
date-format: medium
execute:
  warning: false
  error: false
  message: false
format:
  html:
    page-layout: full
    toc: true
    smooth-scroll: true
    code-fold: true
    code-summary: "Show the code"
    code-block-border-left: "#63B9A1"
    code-block-bg: "#f2f5f9"
    code-copy: hover
    title-block-banner: true
    fig-align: center
    reader-mode: true
---

## 1. Overview

Through visual analytics, FishEye aims to identify companies potentially engaged in illegal fishing and protect marine species affected by it.

In this context, this page will attempt to answer the following task under Mini-Challenge 2 of the VAST Challenge: **Identify companies that fit a pattern of illegal fishing. Use visualizations to support your conclusions and your confidence in them. Limit your response to 300 words and 4 images.**


### 1.1 Import Libraries and Datasets

```{r}
pacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, lubridate, tidyverse, ggiraph, treemap, treemapify)
```

```{r}
mc2_data <- 
  fromJSON("data/mc2_challenge_graph.json")
```

### 1.2 Review the imported data

```{r}
glimpse(mc2_data)
```
### 1.3 Create nodes tibble

```{r}
mc2_nodes <- as_tibble(mc2_data$nodes) %>%
  select(id, shpcountry, rcvcountry)
```


::: callout-note
Removed columns with large number of missing data, namely: valueofgoods_omu, volumeteu, valueofgoodsusd.
:::

### 1.4 Create edges tibble

```{r}
mc2_edges <- as_tibble(mc2_data$links) %>%
  mutate(ArrivalDate = ymd(arrivaldate)) %>%
  mutate(Year = year(ArrivalDate)) %>%
  select(source, target, ArrivalDate, Year, hscode, weightkg) %>% 
  distinct()
```

### 1.5 Check Duplicates

```{r}
any(duplicated(mc2_nodes))

any(duplicated(mc2_edges))
```
### 1.6 Remove duplicates

```{r}
mc2_edges_cleandupe <- mc2_edges[!duplicated(mc2_edges), ]
```

### 1.7 Clean up HS codes

```{r}
length(unique(mc2_edges$hscode))
```

::: callout-note
Removed hscodes that unlikely belong to fishery, based on https://connect2india.com/hs-classification.html. Also removed likely codes for processed foods.
:::

```{r}
mc2_edges_pure <- mc2_edges_cleandupe[grepl('^301|^302|^303|^305', mc2_edges$hscode), ]

length(unique(mc2_edges_pure$hscode))
```

### 1.8 Aggregate Edges

Perform group by 'source', 'target' and 'Year', and aggregate the total count of exchanges

```{r}
mc2_edges_aggregated <- mc2_edges_pure %>%
  group_by(source, target, Year) %>%
    summarise(weights = n(),
              sum_weightkg = sum(weightkg),
              hscode=first(hscode)) %>%
  filter(source!=target) %>%
  filter(weights > 10) %>%
  ungroup()

glimpse(mc2_edges_aggregated)
```

### 1.9 Remove targets with relationship count less than 4

::: callout-note
This is to remove targets with too few relationships.
:::

```{r}
#|eval: false
#|echo: false

relationship_count <- table(mc2_edges_aggregated$target)

relationship_count_heavy <- names(relationship_count[relationship_count >= 4])

mc2_edges_aggregated <- mc2_edges_aggregated[mc2_edges_aggregated$target %in% relationship_count_heavy, ]

print(mc2_edges_aggregated)

```

### 1.10 Prepare Nodes

```{r}
id1 <- mc2_edges_aggregated %>%
  select(source) %>%
  rename(id = source)
id2 <- mc2_edges_aggregated %>%
  select(target) %>%
  rename(id = target)
mc2_nodes_extracted <- rbind(id1, id2) %>%
  distinct()
```

## 2. Create Network graphs for Exploratory Data Analysis

### 2.1 Create the Network graph

```{r}
mc2_graph <- tbl_graph(nodes = mc2_nodes_extracted,
                       edges = mc2_edges_aggregated,
                       directed = TRUE)
```

### 2.1.1 Check the Network graph

```{r}
#|echo: false
mc2_graph
```

### 2.1.2 Visualize the Network Graph

```{r}
ggraph(mc2_graph,
       layout = "fr") +
  geom_edge_link(aes()) +
  geom_node_point(aes()) +
  theme_graph()
```
::: callout-note
Hard to deduce much relationship here, but it looks like the majority of the nodes are interconnected at the center area. Will be working on further filtering.
:::

### 2.1.3 Write RDS

```{r}
write_rds(mc2_nodes_extracted, "data/mc2_nodes_extracted.rds")
write_rds(mc2_edges_aggregated, "data/mc2_edges_aggregated.rds")
write_rds(mc2_graph, "data/mc2_graph.rds")
```

### 2.1.4 Create visNetwork Graph

```{r}
edges_df <- mc2_graph %>%
  activate(edges) %>%
  as_tibble()

nodes_df <- mc2_graph %>%
  activate(nodes) %>%
  as.tibble() %>%
  rename(label = id) %>%
  mutate(id=row_number()) %>%
  select(id, label)

visNetwork(nodes_df,
           edges_df,
           main = "visNetwork of Nodes and Edges") %>%
  visIgraphLayout(layout = "layout_with_fr") %>%
  visEdges(arrows = "to", 
           smooth = list(enabled = TRUE, 
                         type = "curvedCW"))
```
::: callout-note
Again, hard to deduce much relationship here, as the majority of the nodes are interconnected like spagetti at the center area. Will be working on further filtering.
:::

### 2.1.5 Create Interactive VisNetwork with nodes ID Selection

```{r}
visNetwork(nodes_df,
           edges_df) %>%
  visIgraphLayout(layout = "layout_with_fr") %>%
  visOptions(highlightNearest = TRUE,
             nodesIdSelection = TRUE)

```

::: callout-note
Node ID selection is available now, but not enough to identify meaningful relationship. We can identify suspicious company names first and go back to this section later. Will be working on further narrow down.
:::

## 3. Analytics

### 3.1 calculate various centrality measures

```{r}
measures_graph<- mc2_graph %>%
  activate("nodes") %>% 
  mutate(betweenness_centrality = centrality_betweenness(directed = TRUE)) %>% 
  mutate(in_deg_centrality = centrality_degree(weights = weights, 
                                               mode = "in")) %>% 
  mutate(out_deg_centrality = centrality_degree(weights = weights, 
                                               mode = "out"))
```

### 3.2 Top 5 Companies in terms of Betweenness Centrality

```{r}
btw_graph<- measures_graph %>% 
  activate("nodes") %>% 
  as_tibble() %>% 
  arrange(desc(betweenness_centrality)) %>% 
  select(id,betweenness_centrality) %>% 
  head(n=5)


DT::datatable(btw_graph, class = "compact", colnames = c("Name of Company","Betweenness Centrality"),
              caption = 'Table 1: Top 5 Companies by Betweenness Centrality')
```

::: callout-note
Explored Betweenness Centrality but only one company has betweeness centrality greater than 0. This can be attributed to the extensive data narrow down around HS code and weight I have done earlier. 
:::

### 3.3 Top 5 Companies in terms of In-degree Centrality

```{r}
in_deg_graph<- measures_graph %>% 
  activate("nodes") %>% 
  as_tibble() %>% 
  arrange(desc(in_deg_centrality)) %>% 
  select(id,in_deg_centrality) %>% 
  head(n=5)


DT::datatable(in_deg_graph, class = "compact", colnames = c("Name of Company","In-Degree Centrality"),
              caption = 'Table 1: Top 5 Companies by In-Degree')
```

::: callout-note
Top 2 companies standout in terms of in-degree. These companies focus heavily on **inflow** activities. According to literature reviews, these are potentially central carriers that help fishing vessels with transshipping.

Treemaps at section 3.7 below will help explain who are main trading partners (potentially fishing vessels) of these companies.
:::

### 3.4 Top 5 Companies in terms of Out Degree Centrality

```{r}
out_deg_graph<- measures_graph %>% 
  activate("nodes") %>% 
  as_tibble() %>% 
  arrange(desc(out_deg_centrality)) %>% 
  select(id,out_deg_centrality) %>% 
  head(n=5)

DT::datatable(out_deg_graph, class = "compact", colnames = c("Name of Company","Out-Degree Centrality"),
              caption = 'Table 2: Top 5 Companies by Out-Degree')
```

::: callout-note
Identified Top 5 Out-Degree Companies that are primarily involved in exports. Could not find any company that particularly stands out.
:::


### 3.5 Interactive graph for Top 2 Companies in terms of  in-degree Centrality 

#### 3.5.1 Prepare the graph

```{r}
n <- 2
top_n_in_deg_list <- measures_graph %>% 
  activate("nodes") %>% 
  as_tibble() %>% 
  arrange(desc(in_deg_centrality)) %>% 
  top_n(n,wt = in_deg_centrality) %>%
  pull(id)

mc2_edges_agg_in <- mc2_edges_aggregated %>%
  filter(target %in% top_n_in_deg_list | source %in% top_n_in_deg_list)

mc2_nodes_in <- mc2_nodes %>%
  filter (id %in% c(mc2_edges_agg_in$source, mc2_edges_agg_in$target))

mc2_edges_agg_in <- mc2_edges_agg_in %>%
  group_by(source, target) %>%
  mutate(total_shipped_weightkg = sum(sum_weightkg))

mc2_edges_agg_vis_in <- mc2_edges_agg_in %>% 
  rename(from = source) %>% 
  rename(to = target) %>% 
  mutate(title = paste('Total shipment weight = ',total_shipped_weightkg, "\n HSCODE =", hscode))

mc2_nodes_vis_in <- mc2_nodes_in %>% 
  mutate(title = paste('shpcountry =', shpcountry, ',',
                       'rcvcountry =', rcvcountry, ',',
                       '\n In-deg = ', measures_graph$in_deg_centrality, ',',
                       "\n Betweenness =", measures_graph$betweenness_centrality, ',',
                       "\n Out-deg =", measures_graph$out_deg_centrality))
```


#### 3.5.2 Filtered Ego Network of the top 2 In-Degree companies

```{r}

#| fig-width: 12
#| fig-asp: 0.555
set.seed(1234)
visNetwork(mc2_nodes_vis_in,
           mc2_edges_agg_vis_in,
           main = "Filtered Ego Network of top 2 In-Degree companies",
           height = "600px", width = "100%") %>%
  visIgraphLayout(layout = "layout_with_kk") %>%
  visEdges(arrows = 'to',
           smooth = list(enables = TRUE,
                         type= 'straightCross'),
           shadow = FALSE,
           dash = FALSE) %>% 
  visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
             nodesIdSelection = TRUE) %>%
  visInteraction(hideEdgesOnDrag = TRUE) %>% 
  visLegend() %>%
  visLayout(randomSeed = 123)
```

::: callout-note
While the Top 2 companies have their own networks of business partners, they also have a shared network of common business partners.
:::


### 3.6 Interactive graph for top 5 Out-degree centrality companies

```{r}

n <- 5
top_n_out_list <- measures_graph %>%
  activate("nodes") %>% 
  as_tibble() %>% 
  arrange(desc(out_deg_centrality)) %>% 
  top_n(n,wt = out_deg_centrality) %>%
  pull(id)


mc2_edges_agg_out_top_n <- mc2_edges_aggregated[mc2_edges_aggregated$source %in% top_n_out_list, ]


mc2_nodes_out <- mc2_nodes %>%
  filter (id %in% c(mc2_edges_agg_out_top_n$source, mc2_edges_agg_out_top_n$target))

mc2_edges_agg_out_top_n <- mc2_edges_agg_out_top_n %>%
  group_by(source, target) %>%
  mutate(total_shipped_weightkg = sum(sum_weightkg))


mc2_edges_agg_vis_out <- mc2_edges_agg_out_top_n %>% 
  rename(from = source) %>% 
  rename(to = target) %>% 
  mutate(title = paste('Total shipment weight = ',total_shipped_weightkg, "\n HSCODE =", hscode))

mc2_nodes_vis_out <- mc2_nodes_out %>% 
  mutate(title = paste('shpcountry =', shpcountry, ',',
                       'rcvcountry =', rcvcountry, ',',
                       '\n In-deg = ', measures_graph$in_deg_centrality, ',',
                       "\n Betweenness =", measures_graph$betweenness_centrality, ',',
                       "\n Out-deg =", measures_graph$out_deg_centrality))
```


```{r}

#| fig-width: 12
#| fig-asp: 0.555
set.seed(1234)
visNetwork(mc2_nodes_vis_out,
           mc2_edges_agg_vis_out,
           main = "Filtered Ego Network of top 5 Out-Degree companies",
           height = "600px", width = "100%") %>%
  visIgraphLayout(layout = "layout_with_kk") %>%
  visEdges(arrows = 'to',
           smooth = list(enables = TRUE,
                         type= 'straightCross'),
           shadow = FALSE,
           dash = FALSE) %>% 
  visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
             nodesIdSelection = TRUE) %>%
  visInteraction(hideEdgesOnDrag = TRUE) %>% 
  visLegend() %>%
  visLayout(randomSeed = 123)
```
::: callout-note
Again, these are Top 5 Out-Degree Companies that are primarily involved in exports. Could not find any company that particularly stands out. We will shift our focus back to the Top 2 In-Degree Companies.
:::

### 3.7 Tree Map Analysis of trading relationships of the Top 2 In-Degree companies

::: callout-note
Top 2 In-degree companies are: hǎi dǎn Corporation Wharf and Mar del Este CJSC 
:::

#### 3.7.1 hǎi dǎn Corporation Wharf Relationships

```{r}
hai_dan_df<-mc2_edges_agg_vis_in %>%
  filter(to %in% 'hǎi dǎn Corporation Wharf')

treemap(hai_dan_df,
        index=c("from"),
        vSize="weights",
        vColor="weights",
        type="value",
        palette="RdYlBu",
        title="Companies who Trade with hǎi dǎn Corporation Wharf in terms of weightkg")
```


::: callout-note
Mount Kenya, ReefR, and Aqua Aura SE stand out the most as top business partners of hǎi dǎn Corporation Wharf. It would be worth investigating these companies as to where they are incorporated, additional trade relationships etc. 
:::

#### 3.7.2 Mar del Este CJSC

```{r}
mar_del_df<-mc2_edges_agg_vis_in %>%
  filter(to %in% 'Mar del Este CJSC')

treemap(mar_del_df,
        index=c("from"),
        vSize="weights",
        vColor="weights",
        type="value",
        palette="RdYlBu",
        title="Companies who Trade with Mar del Este CJSC in terms of weightkg")
```

::: callout-note
Tiao piao AG Delivery and Belgian Harbor OAO Freight
 stand out the most as top business partners of Mar del Este CJSC. It would be worth investigating these companies as to where they are incorporated, additional trade relationships etc. 
:::


## 4. Conclusion

I was able to scan **potential** actors involved in Transshipping but some further analysis is definitely required.

The two Companies we have identified with the highest in-degree scores would worth further investigations, as these could be central carriers. According to literature reviews, central carriers help fishing vessels unload both at sea and at ports. They are mostly incorporated in open-registry countries (to avoid sanctions) and are often involved in illegal, unreported, or unregulated activities. 

We were also able to identify 5 major trade partners of the aforementioned two companies. These 5 companies are likely fishing vessels who unload their share to central carriers. It would also be worthwhile to look into what these companies do in more detail.


## 5. Reflections

### 5.1 Data limitation 

Unfortunately valueofgoods data was limited for custom-declared, and with lots of Nulls. 
As the main motivation behind illegal fishing would be money, it would be interesting to look at the valueofgoods and not just weightKg.

In addition, the VAST challenge data set did not have data on vessel locations, speed, etc, which makes it difficult for me to identify "likely" transshipment into detail. 

### 5.2 Striking the balance between simplicity vs. details 

After filtering by HS codes and weights, I was left with only 1k nodes. If I had more time, I would have spent more time looking at the distribution of the data, and follow the Pareto rule, etc.


## 6. References

Petrossian, G., & Barthuly, B., & Sonowski, M. (2022, March 31). Identifying Central Carriers and Detecting Key Communities Within the Global Fish Transshipment Networks

Park, A. Stamato, S. (2020). Social Network Analysis of Global Transshipment: A Framework for Discovering Illegal Fishing Networks


